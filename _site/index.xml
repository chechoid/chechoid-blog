<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>chechoid.netlify.app</title>
<link>https://chechoid.netlify.app/index.html</link>
<atom:link href="https://chechoid.netlify.app/index.xml" rel="self" type="application/rss+xml"/>
<description>Un blog sobre R y People Analytics</description>
<generator>quarto-1.3.353</generator>
<lastBuildDate>Sat, 09 Dec 2023 03:00:00 GMT</lastBuildDate>
<item>
  <title>Cargar Campos de Fecha desde Excel Sin Errores</title>
  <dc:creator>Checho </dc:creator>
  <link>https://chechoid.netlify.app/posts/cargar_fechas_desde_excel/index.html</link>
  <description><![CDATA[ 




<p>¿A quién no le pasó esto alguna vez?</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://chechoid.netlify.app/posts/cargar_fechas_desde_excel/data/phoebe_joey.jpg" class="img-fluid figure-img" width="452"></p>
</figure>
</div>
<p>Esto en R muchas veces también nos trae dolores de cabeza así que en esto post vamos a ver cómo podemos solucionar esto.</p>
<section id="el-código" class="level1">
<h1>El Código</h1>
<section id="paquetes" class="level2">
<h2 class="anchored" data-anchor-id="paquetes">Paquetes</h2>
<p>Para este ejemplo vamos a utilizar 3 paquetes, <code>openxlsx</code> que nos permite cargar y guardar archivos de Excel, <code>dplyr</code> para manipular y limpiar datos (podés ver un <a href="https://youtu.be/-AXzusX4Cmo">tutorial acá</a>). También vamos a usar el paquete <code>janitor</code> para limpiar los nombres de las columnas a un formato más fácil de utilizar (elimina tildes, pasa todo a minúscula y reemplaza espacios por guiones, por ejemplo).</p>
<p>El primer paso, en caso que no los tengas aún, es instalar los paquetes:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Instalar paquetes</span></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install.packages</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"openxlsx"</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Cargar y guardar archivos de Excel</span></span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install.packages</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dplyr"</span>)    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Manipular y limpiar datos</span></span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install.packages</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"janitor"</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Entre otras cosas, facilitar manipulación de columnas</span></span></code></pre></div>
</div>
<p>Una vez que termina la instalación, hay que cargarlos. No vamos a cargar el paquete <code>janitor</code> porque sólo vamos a usar una función.</p>
<p>Cargar un paquete “deja activas” todas las funciones del paquete, lo cual implica un consumo de memoria, muchas veces ínfimo, pero consumo al fin, así que en este caso mostraremos como usar una función sin cargar todas las funciones del paquete.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Cargar paquetes</span></span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(openxlsx)</span>
<span id="cb2-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(dplyr)</span></code></pre></div>
</div>
</section>
<section id="los-datos" class="level2">
<h2 class="anchored" data-anchor-id="los-datos">Los datos</h2>
<p>El caso que usaremos de ejemplo simula ser una base de Postulantes de una búsqueda que llevamos adelante para una vacante de People Analytics. Primero carguemos los datos que están almacenados en una carpeta llamada <code>data</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Cargar los datos en R</span></span>
<span id="cb3-2">datos <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read.xlsx</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/Postulantes.xlsx"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb3-3">  janitor<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">clean_names</span>() <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Usamos solo la función clean_names() sin cargar todo el paquete janitor</span></span></code></pre></div>
</div>
<p>Ahora veamos los datos que tenemos cargados:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Ver los datos cargados</span></span>
<span id="cb4-2">datos</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>  fecha_sourcing         busqueda   nombre apellido   telefono            mail
1          44729 People Analytics   Sergio   Garcia 1111111111 sergio@d4hr.com
2          44729 People Analytics  Daniela   Garcia 2222222222            &lt;NA&gt;
3          44729 People Analytics    Yanel Paulette 3333333333            &lt;NA&gt;
4          44729 People Analytics    Carla   Cirone 4444444444            &lt;NA&gt;
5          44729 People Analytics Santiago  Lardone 5555555555            &lt;NA&gt;
  empresa            puesto   github          twitter
1    R4HR Master of Puppets chechoid @sergiogarciamor
2    R4HR Master of Puppets     &lt;NA&gt;             &lt;NA&gt;
3    R4HR Master of Puppets     &lt;NA&gt;             &lt;NA&gt;
4    R4HR Master of Puppets     &lt;NA&gt;             &lt;NA&gt;
5    R4HR Master of Puppets     &lt;NA&gt;             &lt;NA&gt;
                                                  linkedin   fuente status
1            https://www.linkedin.com/in/sergiogarciamora/  Twitter Activo
2        https://www.linkedin.com/in/claudiadanielagarcia/ Linkedin Activo
3               https://www.linkedin.com/in/yanelpaulette/ Linkedin Activo
4       https://www.linkedin.com/in/carla-cirone-0566b095/ Linkedin Activo
5 https://www.linkedin.com/in/santiagolardonequinodozrrhh/ Linkedin Activo
  fecha_ultimo_contacto
1                 44739
2                 44739
3                 44739
4                 44739
5                 44739</code></pre>
</div>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Hagamos un zoom en los campos que contienen fechas</span></span>
<span id="cb6-2">datos <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb6-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(fecha_sourcing, fecha_ultimo_contacto)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>  fecha_sourcing fecha_ultimo_contacto
1          44729                 44739
2          44729                 44739
3          44729                 44739
4          44729                 44739
5          44729                 44739</code></pre>
</div>
</div>
<p>En la tabla anterior vemos que el valor que obtenemos en la primera columna es <code>44729</code>, el número que representa a la fecha <code>17/6/22</code> como podemos apreciar en el archivo original:</p>
<p><img src="https://chechoid.netlify.app/posts/cargar_fechas_desde_excel/data/excel_vista.png" class="img-fluid"></p>
<p>Ahora veremos cómo podemos resolver este problema.</p>
</section>
<section id="solución" class="level2">
<h2 class="anchored" data-anchor-id="solución">Solución</h2>
<p>Para empezar, seleccionemos algunas columnas nomás usando la función <code>select()</code>. Vamos a seleccionar los campos de <code>fecha_sourcing</code> que representa cuándo inició la búsqueda, <code>nombre</code>, <code>empresa</code>, y <code>fecha_ultimo_contacto</code> donde anotamos cuándo fue la última vez que nos pusimos en contacto con cada persona.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Seleccionar los campos con fechas, nombre y empres y sobreescribo el data frame</span></span>
<span id="cb8-2">datos <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> datos <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb8-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(fecha_sourcing, nombre, empresa, fecha_ultimo_contacto)</span>
<span id="cb8-4"></span>
<span id="cb8-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Ver el nuevo dataframe</span></span>
<span id="cb8-6">datos</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>  fecha_sourcing   nombre empresa fecha_ultimo_contacto
1          44729   Sergio    R4HR                 44739
2          44729  Daniela    R4HR                 44739
3          44729    Yanel    R4HR                 44739
4          44729    Carla    R4HR                 44739
5          44729 Santiago    R4HR                 44739</code></pre>
</div>
</div>
<p>Ahora nos quedamos con un data frame de 5 filas y 4 columnas.</p>
<p>Para transformar el campo <code>fecha_sourcing</code> de un formato numérico a un formato de tipo fecha, vamos a usar la función <code>as.Date()</code> de R base.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Transformar el campo fecha_sourcing a tipo fecha</span></span>
<span id="cb10-2">datos <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb10-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fecha_sourcing =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.Date</span>(fecha_sourcing,          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Sobrescribimos el campo fecha_sourcing</span></span>
<span id="cb10-4">                                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">origin =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1899-12-30"</span>,   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Fecha de origen para el conteo</span></span>
<span id="cb10-5">                                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tz =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"UTC"</span>))             <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Huso horario</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>  fecha_sourcing   nombre empresa fecha_ultimo_contacto
1     2022-06-17   Sergio    R4HR                 44739
2     2022-06-17  Daniela    R4HR                 44739
3     2022-06-17    Yanel    R4HR                 44739
4     2022-06-17    Carla    R4HR                 44739
5     2022-06-17 Santiago    R4HR                 44739</code></pre>
</div>
</div>
<p>El trabajo con fechas siempre fue complejo desde el punto de vista del análisis de datos. Especialmente con los distintos formatos que se usan en el mundo, por ejemplo <code>dd/mm/aaaa</code> en Sudamérica, o <code>mm/dd/aaaa</code> en Estados Unidos por ejemplo. R, cuando un campo fecha carga correctamente, lo transforma a un formato ISO 8601 <code>aaaa-mm-dd</code>.</p>
<p><img src="https://chechoid.netlify.app/posts/cargar_fechas_desde_excel/data/perfect_date.jpg" class="img-fluid" width="323"></p>
<p>El primer número que obtuvimos cuando cargamos la tabla en R (el <code>44729</code>) significa que desde el 30 de diciembre de 1899 hasta el 17 de Junio de 2022 pasaron 44.729 días. De ahí el número que obtuvimos en la carga.</p>
<p>El parámetro <code>tz</code>, nos permite especificar el huso horario del registro. Para algunos casos puede ser relevante, pero para la mayoría de los casos de uso que le daríamos en RRHH, es un parámetro que podemos incluir o no.</p>
<section id="cambiar-varios-campos-a-la-vez" class="level3">
<h3 class="anchored" data-anchor-id="cambiar-varios-campos-a-la-vez">Cambiar varios campos a la vez</h3>
<p>Con la tabla que estamos usando de ejemplo, no hay mucho problema en repetir el paso ya que únicamente tenemos dos campos de fechas. ¿Pero qué pasa si tenemos 6, 7, o más campos de fechas en un archivo? Repetir estos pasos manualmente va a hacer confuso nuestro código y más complejo de mantener.</p>
<p>Veamos una forma de cambiar todos los campos de fecha usando algunas funciones auxiliares del paquete <code>dplyr</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Cambios los dos campos de fecha a la vez</span></span>
<span id="cb12-2">datos <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb12-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">across</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">starts_with</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fecha"</span>),</span>
<span id="cb12-4">                <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.Date</span>(.x,</span>
<span id="cb12-5">                         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tz =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"UTC"</span>,</span>
<span id="cb12-6">                         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">origin =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1899-12-30"</span>)))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>  fecha_sourcing   nombre empresa fecha_ultimo_contacto
1     2022-06-17   Sergio    R4HR            2022-06-27
2     2022-06-17  Daniela    R4HR            2022-06-27
3     2022-06-17    Yanel    R4HR            2022-06-27
4     2022-06-17    Carla    R4HR            2022-06-27
5     2022-06-17 Santiago    R4HR            2022-06-27</code></pre>
</div>
</div>
<p>En este caso usamos la función <code>across()</code> para indicarle a R que ejecute la función (en este ejemplo, <code>as.Date()</code>) en todas las variables que cumplan con algún criterio. En este ejemplo, nos valemos de otra función auxiliar, <code>starts_with()</code>, que como su nombre en inglés lo indica, va a ejecutar la función en todas las columnas que empiecen con el término <code>"fecha"</code>.</p>
<p>Este ejemplo funciona porque los campos que contienen una fecha comienzan con el nombre <em>fecha</em>. Por eso es importante al momento de diseñar una base de datos, un formulario, o cualquier registro que utilicemos para que haya una consistencia entre los nombres de los campos para facilitarnos posteriormente el proceso y análisis de datos, independiemente del software que utilicemos.</p>
<p>Presten atención a que delante de la función <code>as.Date()</code> usamos este símbolo (<code>~</code> ) llamado virgulilla (en Neuquén, Argentina, le dríamos ñuflo). Con ese símbolo le indicamos a R que esa va a ser la función que vamos a replicar en todos los campos.</p>
<p>El argumento <code>.x</code>, representa a todas las columnas que habíamos seleccionado con las funciones <code>across()</code> y <code>starts_with()</code>. Es decir que es la forma que tiene R de simplificar cuáles son los campos que tiene que transformar sin que le tengamos que indicar uno por uno cuales son.</p>
</section>
</section>
</section>
<section id="todo-lo-anterior-en-un-tweet" class="level1">
<h1>Todo lo anterior en un tweet</h1>
<p>Este post lo hice originalmente en 2022, y recuerdo que al día siguiente de haberlo publicado, me encontré con el paquete <code>anytime</code> desarrollado por <a href="https://dirk.eddelbuettel.com/">Dirk Eddelbuettel</a>, que resuelve muchos de estos inconvenientes en un tuit (es decir, con pocas líneas de código).</p>
<p>Carguemos los datos nuevamente:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Cargar los datos en R</span></span>
<span id="cb14-2">datos <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read.xlsx</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/Postulantes.xlsx"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb14-3">  janitor<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">clean_names</span>() <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Usamos solo la función clean_names() sin cargar todo el paquete janitor</span></span>
<span id="cb14-4"></span>
<span id="cb14-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Seleccionemos dos campos nada más</span></span>
<span id="cb14-6">datos2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> datos <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb14-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(apellido, fecha_ultimo_contacto)</span></code></pre></div>
</div>
<p>Ahora instalemos el paquete <code>anytime</code>:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Instalar 'anytime'</span></span>
<span id="cb15-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install.packages</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"anytime"</span>)</span></code></pre></div>
</div>
<p>El próximo paso es cargar el paquete.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Cargar anytime</span></span>
<span id="cb16-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(anytime)</span></code></pre></div>
</div>
<p>Para corregir la forma en que el campo fecha está cargado desde Excel sólo tenemos que hacer lo siguiente:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Sobreescribir el campo de fecha</span></span>
<span id="cb17-2">datos2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> datos2 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb17-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fecha_ultimo_contacto =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">anydate</span>(fecha_ultimo_contacto))</span>
<span id="cb17-4"></span>
<span id="cb17-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Ver los resultados</span></span>
<span id="cb17-6">datos2</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>  apellido fecha_ultimo_contacto
1   Garcia            2092-06-28
2   Garcia            2092-06-28
3 Paulette            2092-06-28
4   Cirone            2092-06-28
5  Lardone            2092-06-28</code></pre>
</div>
</div>
<p>En este ejemplo, el año no es el correcto y si prestamos atención en vez de 27 de Junio, nos arroja <strong>28 de Junio</strong>. Esto es un efecto de cuál es la fecha que se toma de origen: en los ejemplos anteriores veíamos que definíamos <code>1899-12-30</code>, en cambio el paquete <code>anytime</code> usa <code>1/1/1970</code>. Esto explica en parte los problemas que nos causa Excel con las fechas (y R también, digamos todo).</p>
<p>Incluso el origen del archivo puede ser un problema. Por ejemplo, si genero un archivo de Excel o un csv en Argentina, donde usamos el formato de fecha <code>dd/mm/yyyy</code> (día, mes, año), y se lo mando a una persona en Estados Unidos donde usan el formato de fecha <code>mm/dd/yyyy</code> (mes, día, año) puede generar que algo que funciona en un lado, no funcione en otro.</p>
<p>Por eso si bien este ejemplo no es perfecto, quería compartirlo porque el código es súper simple, y además a Dirk, el creador del paquete, le encantó este meme:</p>
<p><img src="https://chechoid.netlify.app/posts/cargar_fechas_desde_excel/data/anytime_meme.webp" class="img-fluid" width="502"></p>
<p>Así que si bien trabajar con fechas y horas siempre es complejo, independientemente si estás trabajando con R, Python, Excel, o Power BI. Con este post queríamos mostrar una forma de hacerlo. También existe el paquete <code>lubridate</code> que permite trabajar y hacer cálculos con fechas y del cual hicimos un tutorial que podés ver en <a href="https://youtu.be/rU5153nki7c">YouTube</a> y descargar el código desde <a href="https://github.com/r4hr/club_de_r/blob/master/Sesion_27_Lubridate.R">GitHub</a>.</p>
<p>Si bien, los paquetes como <code>lubridate</code> o <code>anytime</code> son más intuitivos de usar, a veces por un tema de falta de mantenimiento, versiones diferentes, o performance, conviene usar las funciones de R base.</p>
</section>
<section id="la-comunidad-de-r4hr" class="level1">
<h1>La comunidad de R4HR 🥝</h1>
<p>R4HR, la comunidad que también llamamos el Club de R para RRHH es una comunidad de aprendizaje de programación en R destinada para todas las personas que trabajan o quieran trabajar en RRHH en todas partes del mundo. Pensamos esta comunidad inicialmente para la comunidad hispanoparlante para facilitar el aprendizaje y generar contenido que sea relevante para las personas que nos desarrollamos en estas funciones.</p>
<p>Podes sumarte a nuestra comunidad en Slack, o bien seguirnos en redes sociales, acceder a todo nuestro contenido y participar en nuestras actividades gratuitas y abiertas. <a href="https://linktr.ee/r4hrclub">Todo eso lo encontrás en este link</a> 🥝.</p>


</section>

 ]]></description>
  <category>tipito</category>
  <category>tip</category>
  <category>análisis</category>
  <category>date</category>
  <category>fecha</category>
  <guid>https://chechoid.netlify.app/posts/cargar_fechas_desde_excel/index.html</guid>
  <pubDate>Sat, 09 Dec 2023 03:00:00 GMT</pubDate>
</item>
<item>
  <title>Extraer el máximo valor de una fila</title>
  <dc:creator>Checho </dc:creator>
  <link>https://chechoid.netlify.app/posts/maximo-valor-fila/index.html</link>
  <description><![CDATA[ 




<section id="extraer-el-máximo-valor-de-una-fila" class="level1">
<h1>Extraer el máximo valor de una fila</h1>
<p>En este pequeño tutorial (por eso el tag de <code>tipito</code>, o sea un tip chiquito), voy a contar cómo resolví un problema que me encontré en el trabajo y me trajo más de un dolor de cabeza.</p>
<p>Estaba trabajando con una tabla en la que tenía varios cursos, con sus fechas de finalización, y para el análisis que estaba haciendo necesitaba extraer la fecha del último curso completado por cada persona (el valor más alto).</p>
<p>El problema es que cuando estaba ejecutando la función <code>max()</code> en vez de obtener el valor más alto de la fila, obtenía el valor más alto de la columna. Así que en este post vamos a ver la función <code>rowwise()</code> que permite resolver este inconveniente.</p>
<p>En este ejemplo vamos a reemplazar las fechas por un número, que a los fines prácticos plantea el mismo problema.</p>
<section id="datos-de-ejemplo" class="level2">
<h2 class="anchored" data-anchor-id="datos-de-ejemplo">Datos de ejemplo</h2>
<p>Primero carguemos la librería <code>dplyr</code> que además de contener la función <code>rowwise()</code> nos permite trabajar con el <em>pipe</em> <code>%&gt;%</code> para simplificar la lectura del código. Luego crearemos un data frame de ejemplo con datos inventados</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># En caso que no esté instalado 'dplyr' primero ejecutar install.package("dplyr")</span></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(dplyr)</span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Creación de datos</span></span>
<span id="cb1-5">ejemplo <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Nombre"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Carla"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Daniela"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sergio"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Yanel"</span>),</span>
<span id="cb1-6">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Valor A"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">17</span>),</span>
<span id="cb1-7">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Valor B"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">21</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">18</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">400</span>),</span>
<span id="cb1-8">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Valor C"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">39</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">26</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span>), </span>
<span id="cb1-9">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Valor D"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">43</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">86</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>))</span></code></pre></div>
</div>
<p>Ahora veamos cómo quedan los datos</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Ejecutar para ver el contenido del data frame</span></span>
<span id="cb2-2">ejemplo</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>   Nombre Valor.A Valor.B Valor.C Valor.D
1   Carla      12       5      39     100
2 Daniela       8      21     200      43
3  Sergio     300      18      26      86
4   Yanel      17     400      64      12</code></pre>
</div>
</div>
<p>Lo que necesitaba lograr (en un archivo con muchas más columnas que en este ejemplo) es poner en una columna nueva el valor más alto para cada persona. Entonces para <code>Carla</code> esperaba que el resultado fuera <code>100</code>, para <code>Daniela</code> <code>200</code> y así sucesivamente.</p>
<p>Instintivamente lo que hice para intentar obtener el valor más alto de cada caso, fue usar dentro de una función <code>mutate()</code> (para crear una columna nueva) la función <code>max()</code> a un vector con los nombres de las 4 columnas.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">ejemplo <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb4-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Valor Máximo"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(Valor.A, Valor.B, Valor.C, Valor.D)))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>   Nombre Valor.A Valor.B Valor.C Valor.D Valor Máximo
1   Carla      12       5      39     100          400
2 Daniela       8      21     200      43          400
3  Sergio     300      18      26      86          400
4   Yanel      17     400      64      12          400</code></pre>
</div>
</div>
<p>Claramente no es es el resultado que esperaba, así que mi reacción fue la siguiente:</p>
<p><img src="https://chechoid.netlify.app/posts/maximo-valor-fila/https:/media.giphy.com/media/PmRgaD2xj0KH2pPrVF/giphy.gif" class="img-fluid" width="286"></p>
</section>
<section id="la-solución" class="level2">
<h2 class="anchored" data-anchor-id="la-solución">La solución</h2>
<p>El problema del enfoque anterior es que la función <code>max()</code> busca entre todos los datos que le pasamos, las 4 columnas con los valores numéricos, y lo que nos devuelve el valor máximo de entre todas las celdas. <strong>Este es un claro ejemplo de que R está haciendo lo que le dijimos que haga, no lo que estábamos queriendo que haga</strong>.</p>
<p>Para resolver esto, antes de crear una columna nueva con <code>mutate()</code>, usamos la función <code>rowwise()</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">ejemplo <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb6-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rowwise</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span>   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Con esta función indicamos que queremos los cálculos sobre las filas</span></span>
<span id="cb6-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Valor Máximo"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(Valor.A, Valor.B, Valor.C, Valor.D)))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 4 × 6
# Rowwise: 
  Nombre  Valor.A Valor.B Valor.C Valor.D `Valor Máximo`
  &lt;chr&gt;     &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;          &lt;dbl&gt;
1 Carla        12       5      39     100            100
2 Daniela       8      21     200      43            200
3 Sergio      300      18      26      86            300
4 Yanel        17     400      64      12            400</code></pre>
</div>
</div>
<p>La función <code>rowwise()</code> lo que nos permite hacer es cálculos sobre las filas. Dependiendo el caso de uso se puede usar esta alternativa, o <em>“pivotear”</em> o <em>transponer</em> la tabla para que las columnas queden dentro de las filas y luego combinar <code>group_by()</code> y <code>summarise()</code> para calcular el valor máximo para cada persona.</p>
<p>Este enfoque sería así:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyr)</span>
<span id="cb8-2"></span>
<span id="cb8-3">ejemplo_largo <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> ejemplo <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb8-4">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Pivoteamos los datos a un formato 'largo'</span></span>
<span id="cb8-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_longer</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cols =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Valor.A"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Valor.B"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Valor.C"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Valor.D"</span>), </span>
<span id="cb8-6">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">names_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Variable"</span>,</span>
<span id="cb8-7">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Valor"</span>)</span>
<span id="cb8-8"></span>
<span id="cb8-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Veamos el dataset transformado</span></span>
<span id="cb8-10">ejemplo_largo</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 16 × 3
   Nombre  Variable Valor
   &lt;chr&gt;   &lt;chr&gt;    &lt;dbl&gt;
 1 Carla   Valor.A     12
 2 Carla   Valor.B      5
 3 Carla   Valor.C     39
 4 Carla   Valor.D    100
 5 Daniela Valor.A      8
 6 Daniela Valor.B     21
 7 Daniela Valor.C    200
 8 Daniela Valor.D     43
 9 Sergio  Valor.A    300
10 Sergio  Valor.B     18
11 Sergio  Valor.C     26
12 Sergio  Valor.D     86
13 Yanel   Valor.A     17
14 Yanel   Valor.B    400
15 Yanel   Valor.C     64
16 Yanel   Valor.D     12</code></pre>
</div>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Ahora hacemos el cálculo combinando 'group_by' y 'summarise'</span></span>
<span id="cb10-2">ejemplo_largo <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb10-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(Nombre) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb10-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Valor Máximo"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(Valor))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 4 × 2
  Nombre  `Valor Máximo`
  &lt;chr&gt;            &lt;dbl&gt;
1 Carla              100
2 Daniela            200
3 Sergio             300
4 Yanel              400</code></pre>
</div>
</div>
<p>Claramente este es otro enfoque, y depende de la necesidad es una opción válida. Pero en este caso particular necesitaba mantener una fila para cada persona porque después iba a exportar esta tabla a un archivo que luego es cargado en un tablero en Power BI.</p>
<p>Así que, una vez logrado mi objetivo, me dispuse a celebrar como corresponde.</p>
<p><img src="https://chechoid.netlify.app/posts/maximo-valor-fila/https:/media.giphy.com/media/lhwgeqN0pLPBMlFNnn/giphy.gif" class="img-fluid"></p>


</section>
</section>

 ]]></description>
  <category>tipito</category>
  <category>tip</category>
  <category>análisis</category>
  <category>dplyr</category>
  <category>data wrangling</category>
  <guid>https://chechoid.netlify.app/posts/maximo-valor-fila/index.html</guid>
  <pubDate>Thu, 13 Oct 2022 03:00:00 GMT</pubDate>
</item>
<item>
  <title>Microaprendizajes de un proyecto</title>
  <dc:creator>Checho </dc:creator>
  <link>https://chechoid.netlify.app/posts/microaprendizajes/index.html</link>
  <description><![CDATA[ 




<section id="introducción" class="level1">
<h1>Introducción</h1>
<p>Esta presentación se centra en algunos <em>microaprendizajes</em> de un proyecto de análisis de resultados de una encuesta de diversidad e inclusión.</p>
<p>Lo razón por la que lo llamo <em>“microaprendizajes”</em> es porque no tuve que aprender muchas cosas desde cero, pero si aprendí varios truquitos que me sirvieron mucho.</p>
<p>Voy a usar una encuesta simulada para no violar la confidencialidad de los datos, pero va a ser algo análogo a lo que estuve usando en el proyecto.</p>
<p>Para explotar al máximo esta sesión conviene saber un poco de hacer informes con RMarkdown. Si necesitás un tutorial sobre ese tema te comparto el <a href="https://youtu.be/KT4UfTqAYoU">video que hicimos el año pasado</a>.</p>
<section id="section" class="level3">
<h3 class="anchored" data-anchor-id="section"><img src="https://chechoid.netlify.app/posts/microaprendizajes/https:/media.npr.org/assets/img/2023/05/26/honest-work-meme-cb0f0fb2227fb84b77b3c9a851ac09b095ab74d8-s1100-c50.jpg" class="img-fluid" width="395"></h3>
</section>
<section id="repo" class="level3">
<h3 class="anchored" data-anchor-id="repo"> <a href="https://github.com/r4hr/r4hr_microaprendizajes">Repo</a></h3>
<p>Este material se puede utilizar y compartir sin fines comerciales y citando la fuente.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://chechoid.netlify.app/posts/microaprendizajes/https:/upload.wikimedia.org/wikipedia/commons/thumb/9/99/Cc-by-nc_icon.svg/1200px-Cc-by-nc_icon.svg" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Licencia</figcaption>
</figure>
</div>
</section>
</section>
<section id="aprendizajes" class="level1">
<h1>Aprendizajes</h1>
<section id="el-chunk-de-setup" class="level2">
<h2 class="anchored" data-anchor-id="el-chunk-de-setup">El <em>chunk</em> de ‘setup’</h2>
<p>El bloque de código de <code>setup</code> es muy útil para controlar cómo se van a comportar todos los bloques de código.</p>
<p>Mi archivo original tiene +150 bloques de código, imaginen si modificara uno por uno las características de cada bloque.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">knitr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>opts_chunk<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">echo =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">message =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">warning =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fig.retina =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,</span>
<span id="cb1-2">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">out.width =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"80%"</span>)</span></code></pre></div>
</div>
</section>
<section id="ordenar-el-código" class="level2">
<h2 class="anchored" data-anchor-id="ordenar-el-código">Ordenar el código</h2>
<p>Tener un orden en el código es muy importante para poder ir y venir rápido y encontrar rápidamente las cosas, modificar algo, y demás.</p>
<p>Dentro de los bloques de código también es importante poner títulos o marcadores que nos ayuden a encontrar rápido las cosas. El orden que definí fue:</p>
<ol type="1">
<li>Librerías.</li>
<li>Configuraciones generales</li>
<li>Carga de datos</li>
<li>Preprocesamiento y limpieza de datos</li>
<li>Funciones</li>
</ol>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Librerías -----</span></span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb2-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(gt)</span>
<span id="cb2-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(scales)</span>
<span id="cb2-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(extrafont)</span>
<span id="cb2-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(readxl)</span>
<span id="cb2-7"></span>
<span id="cb2-8"></span>
<span id="cb2-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Configuraciones generales ----------</span></span>
<span id="cb2-10"></span>
<span id="cb2-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Colores</span></span>
<span id="cb2-12">verde <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#01B3B6"</span></span>
<span id="cb2-13">negro <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#333132"</span></span>
<span id="cb2-14">gris <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#AEB6BF"</span></span>
<span id="cb2-15"></span>
<span id="cb2-16">color3 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(verde, gris, negro)</span>
<span id="cb2-17">color2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(verde, negro)</span>
<span id="cb2-18"></span>
<span id="cb2-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Opciones de visualización --------</span></span>
<span id="cb2-20"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">options</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scipen =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">999</span>)   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Modifica la visualización de los ejes numérico a valores nominales</span></span>
<span id="cb2-21"></span>
<span id="cb2-22"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">loadfonts</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">quiet =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Permite cargar en R otros tipos de fuentes.</span></span>
<span id="cb2-23"></span>
<span id="cb2-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Estilo limpio sin líneas de fondo</span></span>
<span id="cb2-25">estilo <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">panel.grid =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb2-26">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot.background =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_rect</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#FBFCFC"</span>),</span>
<span id="cb2-27">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">panel.background =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb2-28">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">text =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">family =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ubuntu Mono"</span>))</span>
<span id="cb2-29"></span>
<span id="cb2-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Estilo limpio con líneas de referencia verticales en gris claro</span></span>
<span id="cb2-31">estilov <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">panel.grid =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb2-32">                 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot.background =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_rect</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#FBFCFC"</span>),</span>
<span id="cb2-33">                 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">panel.background =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb2-34">                 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">panel.grid.major.x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_line</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#ecf0f1"</span>),</span>
<span id="cb2-35">                 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">text =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">family =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ubuntu Mono"</span>))</span>
<span id="cb2-36"></span>
<span id="cb2-37"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Estilo limpio con líneas de referencia horizontales en gris claro</span></span>
<span id="cb2-38">estiloh <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">panel.grid =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb2-39">                 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot.background =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_rect</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#FBFCFC"</span>),</span>
<span id="cb2-40">                 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">panel.background =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb2-41">                 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">panel.grid.major.y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_line</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#ecf0f1"</span>),</span>
<span id="cb2-42">                 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">text =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">family =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ubuntu Mono"</span>))</span>
<span id="cb2-43"></span>
<span id="cb2-44"></span>
<span id="cb2-45"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Creo un objeto con un texto que se va a repetir mucho a lo largo del análisis</span></span>
<span id="cb2-46">fuente <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Club de R para RRHH</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Datos Ficticios"</span></span>
<span id="cb2-47"></span>
<span id="cb2-48"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Creo objetos para formatear las etiquetas numéricas de los ejes x e y</span></span>
<span id="cb2-49">eje_x_per <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> scales<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">percent_format</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">accuracy =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))</span>
<span id="cb2-50"></span>
<span id="cb2-51">eje_y_per <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> scales<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">percent_format</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">accuracy =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))</span>
<span id="cb2-52"></span>
<span id="cb2-53"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Carga de Datos -----</span></span>
<span id="cb2-54">encuesta <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_excel</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/encuesta.xlsx"</span>)</span>
<span id="cb2-55">plantel  <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_excel</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/plantel.xlsx"</span>)</span>
<span id="cb2-56"></span>
<span id="cb2-57"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Preparación de datos -----------</span></span>
<span id="cb2-58"></span>
<span id="cb2-59"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Pivotea el dataset a un formato largo</span></span>
<span id="cb2-60">enc <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> encuesta <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb2-61">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_longer</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cols =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>),</span>
<span id="cb2-62">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">names_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pregunta"</span>, </span>
<span id="cb2-63">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"valor"</span>)</span>
<span id="cb2-64"></span>
<span id="cb2-65"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Cambia nombres y Organiza variables ordinales </span></span>
<span id="cb2-66"></span>
<span id="cb2-67">enc <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> enc <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb2-68">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rename</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">id =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ID"</span>,</span>
<span id="cb2-69">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">genero =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">¿Cómo definirías tu identidad de género?</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>,</span>
<span id="cb2-70">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">unidad =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Unidad de Negocio"</span>,</span>
<span id="cb2-71">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pais =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"País"</span>,</span>
<span id="cb2-72">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sector =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sector"</span>,</span>
<span id="cb2-73">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cargo =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tu cargo/nivel:"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb2-74">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cargo =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(cargo,</span>
<span id="cb2-75">                        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">levels =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Management"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Líder"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Contribuidor individual"</span>)))</span>
<span id="cb2-76"></span>
<span id="cb2-77"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Crea categorías de resultados</span></span>
<span id="cb2-78"></span>
<span id="cb2-79">enc <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> enc <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb2-80">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">resultado =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">if_else</span>(valor <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Totalmente de acuerdo"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Positivo"</span>, </span>
<span id="cb2-81">                             <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">if_else</span>(valor <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"De acuerdo"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Positivo"</span>, </span>
<span id="cb2-82">                                     <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">if_else</span>(valor <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ni de acuerdo ni en desacuerdo"</span>,</span>
<span id="cb2-83">                                             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Neutral"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Negativo"</span></span>
<span id="cb2-84">      )</span>
<span id="cb2-85">    )</span>
<span id="cb2-86">  ),</span>
<span id="cb2-87">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">resultado =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(resultado, </span>
<span id="cb2-88">                            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">levels =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Positivo"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Neutral"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Negativo"</span>)))</span></code></pre></div>
</div>
<blockquote class="blockquote">
<p>Y comenten el código por amor a Jebús!</p>
</blockquote>
<p><img src="https://chechoid.netlify.app/posts/microaprendizajes/files/comenten.png" class="img-fluid" width="300"></p>
</section>
<section id="poner-el-nombre-a-los-bloques-de-código" class="level2">
<h2 class="anchored" data-anchor-id="poner-el-nombre-a-los-bloques-de-código">Poner el nombre a los bloques de código</h2>
<p>Algo muy útil es ponerle nombre a los bloques de código. Por un lado porque es fácil para navegar entre bloques buscándolos en RStudio.</p>
<p>Por ejemplo, probemos un gráfico simple:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(enc, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> pais, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> resultado)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_bar</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fill"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_manual</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(color3)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-4">  estiloh <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-5">  eje_y_per <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Resultados por país"</span>,</span>
<span id="cb3-7">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Resultado"</span>,</span>
<span id="cb3-8">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>,</span>
<span id="cb3-9">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">caption =</span> fuente)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://chechoid.netlify.app/posts/microaprendizajes/index_files/figure-html/grafico1-1.png" class="img-fluid" style="width:80.0%"></p>
</div>
</div>
<p>Puede ocurrir que necesitemos reutilizar el gráfico. Hacer la gran <em>stackoverflow</em> (copiar y pegar el código) es una opción, pero puede generar errores y por otro lado implica tiempo de procesamiento.</p>
<p>En cambio, con la opción <code>ref.label</code> podemos reutilizar lo que hicimos antes, de una forma más prolija y cómoda pasando el nombre del bloque anterior.</p>
<p>Internamente, lo que hace R es reutilizar el código creado anteriormente.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">{r ref.label<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grafico1"</span>}</span></code></pre></div>
</div>
<p>Voilá!</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(enc, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> pais, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> resultado)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_bar</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fill"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_manual</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(color3)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-4">  estiloh <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-5">  eje_y_per <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Resultados por país"</span>,</span>
<span id="cb5-7">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Resultado"</span>,</span>
<span id="cb5-8">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>,</span>
<span id="cb5-9">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">caption =</span> fuente)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://chechoid.netlify.app/posts/microaprendizajes/index_files/figure-html/unnamed-chunk-1-1.png" class="img-fluid" style="width:80.0%"></p>
</div>
</div>
</section>
<section id="etiquetas-largas" class="level2">
<h2 class="anchored" data-anchor-id="etiquetas-largas">Etiquetas largas</h2>
<p>A veces necesitamos presentar en un gráfico o en una tabla la pregunta original de la encuesta. Por ejemplo, una de las “preguntas” de la encuesta dice:</p>
<blockquote class="blockquote">
<p><em>Otra pregunta que tiene muchísimo texto escrito en la encuesta y quedó tan larga que no entra en un solo renglón y que me hace preguntarme cómo la voy a poner en un gráfico</em></p>
</blockquote>
<p>Ahora veamos cómo se ven las preguntas en un gráfico si intentamos hacer un ranking.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">enc <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb6-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(pregunta, resultado) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb6-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cant =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>()) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb6-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prop =</span> cant<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(cant)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb6-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(resultado <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Positivo"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb6-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> prop, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> pregunta)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_col</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> verde) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-8">  estilov <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-9">  eje_x_per <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ranking de Respuestas Positivas"</span>,</span>
<span id="cb6-11">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>,</span>
<span id="cb6-12">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">caption =</span> fuente)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://chechoid.netlify.app/posts/microaprendizajes/index_files/figure-html/etiq-largas-1.png" class="img-fluid" style="width:80.0%"></p>
</div>
</div>
<p>Queda hermoso, no? 😱</p>
<p>Para sortear este problema podemos crear una columna nueva, y usar la función <code>str_wrap()</code> del paquete <em>stringr</em>.</p>
<p>Lo que hace esto es agregar el símbolo <code>\n</code> que divide el texto en renglones. Con el parámetro <code>width</code> le indicamos la cantidad de caracteres de largo que tendrá cada renglón.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Divide el largo de 'función' en varias líneas</span></span>
<span id="cb7-2">enc<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>preg2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_wrap</span>(enc<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>pregunta, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>)</span>
<span id="cb7-3"></span>
<span id="cb7-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Veamos como queda esto en el df</span></span>
<span id="cb7-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(enc<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>preg2,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "Una pregunta con un texto muy pero muy\npero muy largo, de verdad que es muy muy\nmuy largo"                                                                                     
[2] "Otra pregunta que tiene muchísimo texto\nescrito en la encuesta y quedó tan larga\nque no entra en un solo renglón y que me\nhace preguntarme cómo la voy a poner en\nun gráfico"
[3] "Los líderes son unos capos"                                                                                                                                                      
[4] "Que grosso es trabajar acá"                                                                                                                                                      
[5] "Esta encuesta es genial"                                                                                                                                                         </code></pre>
</div>
</div>
<p>Y ahora podemos hacer un gráfico que se vea bien:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">enc <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb9-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(preg2, resultado) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb9-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cant =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>()) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb9-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prop =</span> cant<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(cant)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb9-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(resultado <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Positivo"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb9-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> prop, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reorder</span>(preg2, prop))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_col</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> verde) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-8">  estilov <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-9">  eje_x_per <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ranking de Respuestas Positivas"</span>,</span>
<span id="cb9-11">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>,</span>
<span id="cb9-12">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">caption =</span> fuente)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://chechoid.netlify.app/posts/microaprendizajes/index_files/figure-html/etiq-largas2-1.png" class="img-fluid" style="width:80.0%"></p>
</div>
</div>
<p>Ahora queda mucho mejor 👍</p>
<p>También se puede jugar con la altura del gráfico usando la opción <code>fig.height</code> en las opciones del bloque para que haya más espacio entre las barras.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1">{r fig.height<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>} <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># El tamaño es exagerado en este caso</span></span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1">ranking <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> enc <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb11-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(preg2, resultado) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb11-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cant =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>()) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb11-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prop =</span> cant<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(cant)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb11-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(resultado <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Positivo"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb11-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> prop, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reorder</span>(preg2, prop))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb11-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_col</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> verde) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb11-8">  estilov <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb11-9">  eje_x_per <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb11-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ranking de Respuestas Positivas"</span>,</span>
<span id="cb11-11">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>,</span>
<span id="cb11-12">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">caption =</span> fuente)</span>
<span id="cb11-13"></span>
<span id="cb11-14">ranking</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://chechoid.netlify.app/posts/microaprendizajes/index_files/figure-html/etiq-largas3-1.png" class="img-fluid" style="width:80.0%"></p>
</div>
</div>
</section>
<section id="texto-en-los-gráficos" class="level2">
<h2 class="anchored" data-anchor-id="texto-en-los-gráficos">Texto en los gráficos</h2>
<p>Es simple agregar las etiquetas de datos a un gráfico:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1">ranking <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb12-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_text</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">percent</span>(prop, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Muestra los resultados como porcentaje</span></span>
<span id="cb12-3">                                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">accuracy =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)), <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Indica la cantidad de decimales</span></span>
<span id="cb12-4">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,                           <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Cambia el tamaño de la letra</span></span>
<span id="cb12-5">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hjust =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.2</span>,                        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Mueve la etiqueta para la izquierda</span></span>
<span id="cb12-6">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">family =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ubuntu Mono"</span>) </span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://chechoid.netlify.app/posts/microaprendizajes/index_files/figure-html/texto1-1.png" class="img-fluid" style="width:80.0%"></p>
</div>
</div>
<p>Miremos lo que pasa cuando queremos agregar más información al gráfico, por ejemplo, con los resultados por país.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1">ranking <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> enc <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb13-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(pais, preg2, resultado) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb13-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cant =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>()) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb13-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prop =</span> cant<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(cant)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb13-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(resultado <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Positivo"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb13-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> prop, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reorder</span>(preg2, prop), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> pais)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_col</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dodge"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-8">  estilov <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-9">  eje_x_per <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ranking de Respuestas Positivas"</span>,</span>
<span id="cb13-11">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>,</span>
<span id="cb13-12">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"País"</span>,</span>
<span id="cb13-13">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">caption =</span> fuente) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_brewer</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">palette =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb13-15"></span>
<span id="cb13-16">ranking <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-17">   <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_text</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">percent</span>(prop, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Muestra los resultados como porcentaje</span></span>
<span id="cb13-18">                                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">accuracy =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)), <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Indica la cantidad de decimales</span></span>
<span id="cb13-19">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,                           <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Cambia el tamaño de la letra</span></span>
<span id="cb13-20">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hjust =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.2</span>,                        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Mueve la etiqueta para la izquierda</span></span>
<span id="cb13-21">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">family =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ubuntu Mono"</span>)             <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Modifica la fuente</span></span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://chechoid.netlify.app/posts/microaprendizajes/index_files/figure-html/texto2-1.png" class="img-fluid" style="width:80.0%"></p>
</div>
</div>
<p>El problema es que todas las etiquetas de cada barra están centradas con la etiqueta del eje <em>y</em>. En la guía de <code>geom_text</code> en la documentación de <code>ggplot2</code> <a href="https://ggplot2.tidyverse.org/reference/geom_text.html">encontramos como solucionar el problema</a> usando el parámetro <code>position_dodge()</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1">ranking <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> ranking <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb14-2">   <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_text</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">percent</span>(prop, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Muestra los resultados como porcentaje</span></span>
<span id="cb14-3">                                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">accuracy =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)), <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Indica la cantidad de decimales</span></span>
<span id="cb14-4">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">position =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">position_dodge</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span>),     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Acomoda cada etiqueta con las barras</span></span>
<span id="cb14-5">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,                           <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Cambia el tamaño de la letra</span></span>
<span id="cb14-6">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hjust =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.2</span>,                        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Mueve la etiqueta para la izquierda</span></span>
<span id="cb14-7">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">family =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ubuntu Mono"</span>)             <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Modifica la fuente</span></span>
<span id="cb14-8"></span>
<span id="cb14-9">ranking</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://chechoid.netlify.app/posts/microaprendizajes/index_files/figure-html/text3-1.png" class="img-fluid" style="width:80.0%"></p>
</div>
</div>
<p>Otra mejora que podemos hacer al gráfico es acomodar los colores en la leyenda (la referencia de los colores) para que tengan la misma secuencia que tiene en el gráfico, es decir que el verde oscuro aparezca primero al igual que la barra con el verde más oscuro en el gráfico.</p>
<p>En <a href="https://www.datanovia.com/en/blog/ggplot-legend-title-position-and-labels/">esta página</a> hay muchas variantes para trabajar con las etiquetas y leyendas.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1">ranking <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb15-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">guides</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">guide_legend</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">reverse=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Invierte el orden de los colores en la leyenda</span></span>
<span id="cb15-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.text.x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>())</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://chechoid.netlify.app/posts/microaprendizajes/index_files/figure-html/texto4-1.png" class="img-fluid" style="width:80.0%"></p>
</div>
</div>
<p>Cuando estamos mapeando una variable categórica en el eje <em>y</em>, R lo ordena alfabéticamente desde <em>abajo</em> <strong>hacia</strong> <em>arriba</em>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1">enc <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb16-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(sector, resultado) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb16-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cant =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>()) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb16-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prop =</span> cant<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(cant)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb16-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(resultado <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Positivo"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb16-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> prop, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> sector)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_col</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> verde) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-8">  estilov <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-9">  eje_x_per <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Resultado Positivos por Sector"</span>,</span>
<span id="cb16-11">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>,</span>
<span id="cb16-12">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">caption =</span> fuente)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://chechoid.netlify.app/posts/microaprendizajes/index_files/figure-html/textoy-1.png" class="img-fluid" style="width:80.0%"></p>
</div>
</div>
<p>Podemos usar la función <code>fct_rev</code> del paquete <em>forcats</em> para poner al revés las etiquetas del eje <em>y</em> cuando estamos mapeando las variables dentro de <code>ggplot</code></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1">enc <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb17-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(sector, resultado) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb17-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cant =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>()) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb17-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prop =</span> cant<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(cant)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb17-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(resultado <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Positivo"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb17-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> prop, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fct_rev</span>(sector))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Invertimos el orden del eje y</span></span>
<span id="cb17-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_col</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> verde) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb17-8">  estilov <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb17-9">  eje_x_per <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb17-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Resultado Positivos por Sector"</span>,</span>
<span id="cb17-11">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>,</span>
<span id="cb17-12">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">caption =</span> fuente)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://chechoid.netlify.app/posts/microaprendizajes/index_files/figure-html/textoy2-1.png" class="img-fluid" style="width:80.0%"></p>
</div>
</div>
</section>
<section id="funciones" class="level2">
<h2 class="anchored" data-anchor-id="funciones">Funciones</h2>
<p>Esto es un <em>work-in-progress</em> y tengo que agradecer a <a href="https://twitter.com/MonicaLA2000">Mónica Alonso</a> de RLadies Buenos Aires por la ayuda.</p>
<p>El problema es que me encontré muchas veces escribiendo esta secuencia de código muchas veces:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb18-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calcular pocertajes de respuestas</span></span>
<span id="cb18-2">enc <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb18-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(genero, resultado) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb18-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cant =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>()) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb18-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prop =</span> cant <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(cant))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 6 × 4
# Groups:   genero [2]
  genero    resultado  cant   prop
  &lt;chr&gt;     &lt;fct&gt;     &lt;int&gt;  &lt;dbl&gt;
1 Femenino  Positivo   1127 0.764 
2 Femenino  Neutral     244 0.165 
3 Femenino  Negativo    104 0.0705
4 Masculino Positivo   1477 0.823 
5 Masculino Neutral     222 0.124 
6 Masculino Negativo     96 0.0535</code></pre>
</div>
</div>
<p>Muchas veces resolví copiando y pegando el código, pero se hace tedioso controlar cada uno de los bloques de código y gráficos. Así que para eso, podemos crear nuestras propias funciones.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb20-1">cant_prop_gen <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(df){</span>
<span id="cb20-2">  df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb20-3">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(genero,resultado) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb20-4">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cant =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>()) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb20-5">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prop =</span> cant <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(cant)) </span>
<span id="cb20-6">}</span></code></pre></div>
</div>
<p>Y ahora lo podemos incorporar en nuestro flujo de trabajo como cualquier función.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb21-1">enc <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb21-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cant_prop_gen</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb21-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> genero, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> prop, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> resultado)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb21-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_col</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dodge"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb21-5">  eje_y_per <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb21-6">  estiloh <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb21-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_manual</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values =</span> color3) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb21-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Resultados por Género"</span>,</span>
<span id="cb21-9">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>,</span>
<span id="cb21-10">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Resultado"</span>,</span>
<span id="cb21-11">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">caption =</span> fuente)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://chechoid.netlify.app/posts/microaprendizajes/index_files/figure-html/fun3-1.png" class="img-fluid" style="width:80.0%"></p>
</div>
</div>
<p>Todavía estoy resolviendo como crear funciones usando cualquier tipo de variable en la función. Por ahora, lo estoy resolviendo creando una función para cada combinación de variables que agrupo. No es lo ideal, pero es lo que hay. 🤷</p>
<p>Capaz encuentre lo que necesito en estos libros:</p>
<ul>
<li><a href="https://es.r4ds.hadley.nz/">R para Ciencia de Datos</a></li>
<li><a href="https://rstudio-education.github.io/hopr/">Hands-On Programming with R</a></li>
<li><a href="https://adv-r.hadley.nz/index.html">Advanced R</a></li>
</ul>
<p>Ya les contaré… stay tuned 📺</p>
</section>
<section id="código-inline" class="level2">
<h2 class="anchored" data-anchor-id="código-inline">Código Inline</h2>
<p>Como sabemos, algo interesante de RMarkdown es la posibilidad de utilizar el código de los bloques dentro del texto.</p>
<p>Así que creemos un pequeño objeto primero para almacenar los resultados positivos y negativos por género.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb22-1">result_genero <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> enc <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb22-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cant_prop_gen</span>()</span>
<span id="cb22-3"></span>
<span id="cb22-4">result_genero</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 6 × 4
# Groups:   genero [2]
  genero    resultado  cant   prop
  &lt;chr&gt;     &lt;fct&gt;     &lt;int&gt;  &lt;dbl&gt;
1 Femenino  Positivo   1127 0.764 
2 Femenino  Neutral     244 0.165 
3 Femenino  Negativo    104 0.0705
4 Masculino Positivo   1477 0.823 
5 Masculino Neutral     222 0.124 
6 Masculino Negativo     96 0.0535</code></pre>
</div>
</div>
<p>Usando la llamada de datos de un dataframe con <code>nombre_df[fila,columna]</code> puedo usar los resultados almacenados para incluirlos dentro del texto por ejemplo para decir:</p>
<p><em>Los resultados positivos para las personas de género femenino es 0.7640678</em>.</p>
<p>Lo ideal es poder ver ese resultado como un porcentaje, así que intuitivamente podemos usar la función <code>percent</code> para lograr eso…</p>
<p>…y no va a funcionar. Obtenemos el siguiente mensaje de error:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb24-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Intento de código inline</span></span>
<span id="cb24-2"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">r percent(result_genero[1,4])</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span></span>
<span id="cb24-3"></span>
<span id="cb24-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Quitting from lines 425-441 (r4hr_microaprendizajes.Rmd) </span></span>
<span id="cb24-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Error in is.finite(x) : default method not implemented for type 'list'</span></span></code></pre></div>
</div>
<p>Para que la función <code>percent</code> funcione la tenemos que combinar con la función <code>pull</code> . Y ahora así sí funciona:</p>
<p><em>Los resultados positivos para las personas de género femenino es 76%</em> .</p>
</section>
<section id="trust-the-tidyverse" class="level2">
<h2 class="anchored" data-anchor-id="trust-the-tidyverse"><em>Trust the Tidyverse</em></h2>
<blockquote class="blockquote">
<p><em>Lo barato sale caro</em></p>
<p>Dicho popular</p>
</blockquote>
<p><img src="https://chechoid.netlify.app/posts/microaprendizajes/https:/linternasybosques.files.wordpress.com/2018/10/meme-no-creas.png" class="img-fluid" width="300"></p>
<p>La encuesta que estábamos analizando era anónima, lo cual hacía imposible poder cruzar datos contra el listado de empleados.</p>
<p>Pero, sí podíamos calcular los resultados según la composición del liderazgo. Para eso teníamos que calcular el porcentaje de líderes hombres y mujeres por sector.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb25-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Cuento la cantidad de líderes por sector y géenero</span></span>
<span id="cb25-2">plantel <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> plantel <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb25-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rename</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">division =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Unidad de Negocio</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>, </span>
<span id="cb25-4">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lider =</span> Líder, </span>
<span id="cb25-5">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sexo =</span> Género, </span>
<span id="cb25-6">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sector =</span> Sector, </span>
<span id="cb25-7">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pais =</span> País) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb25-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(lider <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"true"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb25-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(pais, division, sector, lider, sexo) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb25-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tally</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb25-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ungroup</span>()</span>
<span id="cb25-12"></span>
<span id="cb25-13">plantel</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 106 × 6
   pais  division sector           lider sexo          n
   &lt;chr&gt; &lt;chr&gt;    &lt;chr&gt;            &lt;chr&gt; &lt;chr&gt;     &lt;int&gt;
 1 Chad  Unidad 1 Comercial        true  Femenino      4
 2 Chad  Unidad 1 Comercial        true  Masculino     3
 3 Chad  Unidad 1 R&amp;D              true  Femenino      5
 4 Chad  Unidad 1 R&amp;D              true  Masculino     1
 5 Chad  Unidad 2 Administración   true  Femenino      3
 6 Chad  Unidad 2 Administración   true  Masculino     6
 7 Chad  Unidad 2 Calidad          true  Femenino      1
 8 Chad  Unidad 2 Comercial        true  Femenino      5
 9 Chad  Unidad 2 Comercial        true  Masculino     1
10 Chad  Unidad 2 Recursos Humanos true  Femenino      3
# ℹ 96 more rows</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb27-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Pivoteo el dataset a un dataset ancho</span></span>
<span id="cb27-2">plantel <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> plantel <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb27-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_wider</span>(.,</span>
<span id="cb27-4">              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">names_from =</span> sexo,</span>
<span id="cb27-5">              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values_from =</span> n)</span>
<span id="cb27-6"></span>
<span id="cb27-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Reemplaza los NA con un 0</span></span>
<span id="cb27-8">plantel[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(plantel)] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb27-9"></span>
<span id="cb27-10"></span>
<span id="cb27-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculo porcentaje de líderes hombres</span></span>
<span id="cb27-12">plantel <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb27-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prop_lider_hombre =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">if_else</span>(Femenino <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, Masculino <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (Masculino <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>Femenino))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb27-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>lider)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 60 × 6
   pais  division sector           Femenino Masculino prop_lider_hombre
   &lt;chr&gt; &lt;chr&gt;    &lt;chr&gt;               &lt;int&gt;     &lt;int&gt;             &lt;dbl&gt;
 1 Chad  Unidad 1 Comercial               4         3             0.429
 2 Chad  Unidad 1 R&amp;D                     5         1             0.167
 3 Chad  Unidad 2 Administración          3         6             0.667
 4 Chad  Unidad 2 Calidad                 1         0             0    
 5 Chad  Unidad 2 Comercial               5         1             0.167
 6 Chad  Unidad 2 Recursos Humanos        3         0             0    
 7 Chad  Unidad 3 Administración          2         2             0.5  
 8 Chad  Unidad 3 Calidad                 2         2             0.5  
 9 Chad  Unidad 3 Comercial               5        20             0.8  
10 Chad  Unidad 3 HSE                     1         0             0    
# ℹ 50 more rows</code></pre>
</div>
</div>


</section>
</section>

 ]]></description>
  <category>ggplot2</category>
  <category>tipito</category>
  <category>tip</category>
  <category>visualización</category>
  <category>rmarkdown</category>
  <guid>https://chechoid.netlify.app/posts/microaprendizajes/index.html</guid>
  <pubDate>Wed, 05 Oct 2022 03:00:00 GMT</pubDate>
</item>
<item>
  <title>Haciendo pavadas en R</title>
  <dc:creator>Checho </dc:creator>
  <link>https://chechoid.netlify.app/posts/haciendo-boludeces-en-r/index.html</link>
  <description><![CDATA[ 




<section id="por-qué-elegí-esto-como-mi-primer-post" class="level1">
<h1>¿Por qué elegí esto como mi primer post?</h1>
<p>Una vez vi una charla de Ryan Timpe, un Data Scientist de Lego, que en una <a href="https://www.rstudio.com/resources/rstudioconf-2020/learning-r-with-humorous-side-projects/">charla en la RStudio Conference</a> contaba cómo a veces hacía proyectos que fueran divertidos para aprender nuevos skills de análisis de datos. En su charla cuenta por ejemplo, que hizo un análisis de los diálogos de la serie <em>The Golden Girls</em> usando técnicas de text mining para detectar cuáles eran las palabras más frecuentes, entonces cada vez que una protagonista decía esa palabra ellos hacían un fondo blanco de lo que estuvieran tomando.</p>
<p>Este post va de lo mismo. Yo quería aprender a usar imágenes en mis visualizaciones, así nació este proyecto en el que usé imágenes de personas con rasgos “similares” a los míos e incluir las fotos en un gráfico de dispersión.</p>
<p>Esto que es una boludez implicó:</p>
<ul>
<li><p>Crear un formulario en Google Forms</p></li>
<li><p>Levantar los datos de las respuestas</p></li>
<li><p>Procesar los resultados</p></li>
<li><p>E incluir visualizaciones usando las imágenes de las personas.</p></li>
</ul>
<p>Este tipo de proyectos lo que permite es que el esfuerzo que dedicás a aprender no se sienta pesado, y que te da una motivación extra para buscar la solución para lograr el resultado.</p>
</section>
<section id="un-poco-de-contexto" class="level1">
<h1>Un poco de contexto</h1>
<p>Este soy yo:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://chechoid.netlify.app/posts/haciendo-boludeces-en-r/archivos/sergio.jpg" class="img-fluid figure-img" alt="Foto de Sergio, sosteniendo una copa de vino" width="372"></p>
<figcaption class="figure-caption">En mi luna de miel en Mendoza</figcaption>
</figure>
</div>
<p>Como verán, tengo el pelo más o menos largo, con flequillo y barba candado. Mucha gente dice que me parezco a Nicolás del Caño 🤷, un diputado del Partido de los Trabajadores Socialistas de Argentina y que tiene un corte de pelo parecido al mío y también usa barba.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://chechoid.netlify.app/posts/haciendo-boludeces-en-r/https:/www.izquierdadiario.es/IMG/auton3.jpg?1605455691" class="img-fluid figure-img" width="221"></p>
<figcaption class="figure-caption">Nicolás del Caño</figcaption>
</figure>
</div>
<p>En estas fotos no nos vemos tan parecidos, pero déjenme contarles una anécdota. Cuando mi hija tenía 3 años aproximadamente estábamos en campaña electoral de diputados y había afiches de todos los partidos políticos pegados por todos lados, incluyendo claro está los del PTS y Nicolás del Caño obviamente.</p>
<p>En esa época mi hija y mi esposa iban caminando por la calle, y cuando se estaban acercando a uno de los afiches de Del Caño mi hija apunta con su dedito y dice “Papá!” como si yo fuera el que estaba en el afiche. Así que algún parecido hay.</p>
<p>También dijo lo mismo mirando un afiche de Johnny Depp promocionando el perfume Savage, pero esa no me la cree nadie.</p>
<p>Otros personajes con los que mis amigos suelen bromear que somos parecidos son el Gigoló, Roberto Baradel, o el Mono Burgos.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://chechoid.netlify.app/posts/haciendo-boludeces-en-r/https:/www.cronica.com.ar/export/sites/cronica/img/2019/05/06/gigolo_2.jpg_343233968.jpg" class="img-fluid figure-img" width="184"></p>
<figcaption class="figure-caption">El Gigoló</figcaption>
</figure>
</div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://chechoid.netlify.app/posts/haciendo-boludeces-en-r/https:/cdn.cnn.com/cnnnext/dam/assets/190306231108-pba-baradel-large-169.jpg" class="img-fluid figure-img" width="339"></p>
<figcaption class="figure-caption">Roberto Baradel</figcaption>
</figure>
</div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://chechoid.netlify.app/posts/haciendo-boludeces-en-r/https:/phantom-elmundo.unidadeditorial.es/6744bff920f7004ccfe5c7f23aefac88/crop/0x29/1972x1340/resize/1200/f/webp/assets/multimedia/imagenes/2020/06/03/15912134233683.jpg" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">El Mono Burgos</figcaption>
</figure>
</div>
<p>Ya sé lo que están pensando: <em>Con amigos así quién necesita enemigos</em>. Pero igual se hacen querer.</p>
<section id="génesis-de-la-idea-k-nn" class="level2">
<h2 class="anchored" data-anchor-id="génesis-de-la-idea-k-nn">Génesis de la idea: k-nn</h2>
<p>La idea de este análisis surgió un día después de hacer una explicación sobre un método de clustering llamado <strong>k-nn</strong>. Los métodos de clustering son técnicas de ciencia de datos que permiten hallar grupos entre los datos (llamados <em>clusters</em> en la jerga).</p>
<p>El método k-nn, <em>k</em> <em>nearest neighbors</em> o de vecinos más cercanos lo que hace es asignar a cada individuo a un cluster en función de las características de sus “vecinos”. Es decir que determina a qué grupo pertenece cada caso en función a qué casos se parece más.</p>
<p>La forma que se me ocurrió para explicar esto de manera visual fue con este dibujo que hice en Paint:</p>
<p><img src="https://chechoid.netlify.app/posts/haciendo-boludeces-en-r/archivos/clones_paint.jpg" class="img-fluid"></p>
<p>La explicación es que yo, dentro de ese conjunto de datos, estoy más cerca de pertenecer al cluster del Mono Burgos y de Nicolás del Caño, más que del cluster de Keanu Reeves, Jeff Bridges y Brad Pitt.</p>
<p>Y después tuve una idea. <strong>¿Y si hago esto con datos?</strong></p>
<p><img src="https://chechoid.netlify.app/posts/haciendo-boludeces-en-r/https:/media1.giphy.com/media/3oz8xP6SaSkSU9dhcI/200w.gif?cid=82a1493b6dys6v5sl1wm0y65sc1ej72nglv6y40cwx6rrtw2&amp;rid=200w.gif&amp;ct=g" class="img-fluid"></p>
</section>
</section>
<section id="haciendo-cosas-raras-para-gente-normal-en-r" class="level1">
<h1>Haciendo cosas raras para gente normal en R</h1>
<p>La idea entonces es replicar el gráfico de arriba pero usando datos. Entonces lo que hice fue en primer lugar buscar fotos de personajes argentinos e internacionales que tengan el pelo más o menos largo, usen barba, y en algunos casos tengan unos kilos de más.</p>
<p>Para este paso lo que hice fue pasar todas las fotos de los personas en Canva para que me queden todas las imágenes del mismo tamaño.</p>
<p>Luego me armé un formulario en Google Forms con cada imagen para compartir con amigas y amigos para que voten del 1 al 10 la <em>facha</em> (facha en Argentina es una forma de decir belleza) y la <em>copadez</em> (que tan agradables son las personas).</p>
<p>Los personajes involucrados fueron:</p>
<ul>
<li><p>Nicolás del Caño</p></li>
<li><p>Roberto Baradel</p></li>
<li><p>El Mono Burgos</p></li>
<li><p>Ricardo Caruso Lombardi</p></li>
<li><p>Ben Affleck</p></li>
<li><p>Jeff Bridges</p></li>
<li><p>Brad Pitt</p></li>
<li><p>Javier Bardem</p></li>
<li><p>Keanu Reeves</p></li>
<li><p>Y su fiel servidor 😉</p></li>
</ul>
<p>En mi análisis original cargué los datos directamente desde el Google Sheets que se genera con los resultados del Forms. Solo para los fines de reproducibilidad en este caso voy a usar un archivo csv así si quieren pueden replicar los resultados.</p>
<p>Así que ahora podemos armar el script.</p>
<section id="cargando-los-datos-y-preparándolos" class="level2">
<h2 class="anchored" data-anchor-id="cargando-los-datos-y-preparándolos">Cargando los datos y preparándolos</h2>
<p>Empecemos cargando las librerías y los datos directamente desde un repositorio:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Paquetes</span></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Cargar, limpiar y preparar datos</span></span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggimage)   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Para usar imágenes en las visualizaciones</span></span>
<span id="cb1-4"></span>
<span id="cb1-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Datos</span></span>
<span id="cb1-6">clones <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_delim</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://raw.githubusercontent.com/chechoid/silliest-use-of-r/main/source.csv"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">delim =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">";"</span>)</span>
<span id="cb1-7"></span>
<span id="cb1-8"></span>
<span id="cb1-9">comentarios <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> clones <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">comentarios =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Poné lo que quieras... parecidos, chistes, comentarios, etc...</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(comentarios))</span>
<span id="cb1-12"></span>
<span id="cb1-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Exploremos los datos</span></span>
<span id="cb1-14"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(clones)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 6 × 24
  `Marca temporal`    `Facha de Keanu` `Copadez de Keanu` `Facha de Russell`
  &lt;dttm&gt;                         &lt;dbl&gt;              &lt;dbl&gt;              &lt;dbl&gt;
1 2021-06-23 12:37:28               10                 10                  7
2 2021-06-23 12:39:12                4                 10                  5
3 2021-06-23 12:42:21                8                  9                  8
4 2021-06-23 12:43:24               10                 10                  1
5 2021-06-23 12:45:03               10                  8                  4
6 2021-06-23 12:45:12                5                  9                  1
# ℹ 20 more variables: `Copadez de Russell` &lt;dbl&gt;, `Facha de Nico` &lt;dbl&gt;,
#   `Copadez de Nico` &lt;dbl&gt;, `Facha de Roberto` &lt;dbl&gt;,
#   `Copadez de Roberto` &lt;dbl&gt;, `Facha de Jeff` &lt;dbl&gt;, `Copadez de Jeff` &lt;dbl&gt;,
#   `Facha de Brad` &lt;dbl&gt;, `Copadez de Brad` &lt;dbl&gt;, `Facha del Mono` &lt;dbl&gt;,
#   `Copadez del Mono` &lt;dbl&gt;, `Facha de Sergio` &lt;dbl&gt;,
#   `Copadez de Sergio` &lt;dbl&gt;, `Facha de Ricky` &lt;dbl&gt;,
#   `Copadez de Ricky` &lt;dbl&gt;, `Facha de Ben` &lt;dbl&gt;, `Copadez de Ben` &lt;dbl&gt;, …</code></pre>
</div>
</div>
<p>Ahí podemos ver que para cada personaje tenemos una columna con el puntaje de su facha y su puntaje de copadez.</p>
<p>El siguiente paso consiste en eliminar algunas columnas que no son relevantes para el análisis, y agregamos una columna de <code>id</code>. Y luego tenemos que “pivotear” la tabla para que nos queden todas las columnas de puntajes de los personajes en dos columnas:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Eliminar columnas innecesarias</span></span>
<span id="cb3-2">clones <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> clones <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb3-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Marca temporal</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Poné lo que quieras... parecidos, chistes, comentarios, etc...</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>)</span>
<span id="cb3-4"></span>
<span id="cb3-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Agregar columna de id</span></span>
<span id="cb3-6">clones <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> clones <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb3-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rowid_to_column</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">var =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"id"</span>)</span>
<span id="cb3-8"></span>
<span id="cb3-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Pivotear variables</span></span>
<span id="cb3-10">clones <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> clones <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb3-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_longer</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cols =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Facha de Keanu"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Copadez de Javier"</span>),</span>
<span id="cb3-12">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">names_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"personaje"</span>,</span>
<span id="cb3-13">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"puntaje"</span>)</span>
<span id="cb3-14"></span>
<span id="cb3-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Veamos como queda el dataset ahora</span></span>
<span id="cb3-16"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(clones)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 6 × 3
     id personaje          puntaje
  &lt;int&gt; &lt;chr&gt;                &lt;dbl&gt;
1     1 Facha de Keanu          10
2     1 Copadez de Keanu        10
3     1 Facha de Russell         7
4     1 Copadez de Russell      10
5     1 Facha de Nico            1
6     1 Copadez de Nico          1</code></pre>
</div>
</div>
<p>Habíamos comenzado con un dataset de 66 filas y 24 columnas. Ahora terminamos con un data frame de 1.452 filas en 3 columnas. Ahora necesitamos eliminar las palabras intermedias <code>de</code> y <code>del</code> de los nombres en la columna <code>personaje</code> así después podemos crear una columna para <code>facha</code>, y otra para <code>copadez</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Separar variables categóricas</span></span>
<span id="cb5-2">clones <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> clones <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb5-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">personaje =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_remove</span>(personaje, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"de "</span>),</span>
<span id="cb5-4">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">personaje =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_remove</span>(personaje, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"del "</span>))</span>
<span id="cb5-5"></span>
<span id="cb5-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Veamos el puntaje promedio de cada personaje y sus caraceterísticas</span></span>
<span id="cb5-7">clones <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb5-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(personaje) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb5-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">valor_promedio =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(puntaje)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb5-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> valor_promedio, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> personaje)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://chechoid.netlify.app/posts/haciendo-boludeces-en-r/index_files/figure-html/preproceso2-1.png" class="img-fluid" width="672"></p>
</div>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Dividimos la columna 'personaje' en dos columnas, una para la métrica y otra para el nombre</span></span>
<span id="cb6-2">clones <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> clones <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb6-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">separate</span>(personaje,  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">into =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"metrica"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"persona"</span>))</span>
<span id="cb6-4"></span>
<span id="cb6-5"></span>
<span id="cb6-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Pivotear ancho </span></span>
<span id="cb6-7">clones <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> clones <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb6-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_wider</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">id_cols =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(id, persona),</span>
<span id="cb6-9">              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">names_from =</span> metrica,</span>
<span id="cb6-10">              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values_from =</span> puntaje)</span>
<span id="cb6-11"></span>
<span id="cb6-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Veamos como queda el data frame ahora</span></span>
<span id="cb6-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(clones)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 6 × 4
     id persona Facha Copadez
  &lt;int&gt; &lt;chr&gt;   &lt;dbl&gt;   &lt;dbl&gt;
1     1 Keanu      10      10
2     1 Russell     7      10
3     1 Nico        1       1
4     1 Roberto     1       1
5     1 Jeff        5       5
6     1 Brad       10      10</code></pre>
</div>
</div>
<p>Luego de estos pasos quedamos con un data frame de 726 filas, una para cada votación para cada personaje, y con 4 columnas, <code>id</code>, <code>persona</code>, <code>Facha</code> y <code>Copadez</code>. Con estos datos podemos ver los resultados de cada persona:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculamos los resultados promedios para cada persona y graficamos los resultados</span></span>
<span id="cb8-2">resultados <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> clones <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb8-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(persona) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb8-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">facha_promedio =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(Facha),</span>
<span id="cb8-5">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">copadez_promedio =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(Copadez))</span>
<span id="cb8-6"></span>
<span id="cb8-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(resultados, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> copadez_promedio, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> facha_promedio, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> persona)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://chechoid.netlify.app/posts/haciendo-boludeces-en-r/index_files/figure-html/resultados_promedios-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>En esencia, este es el gráfico al que queremos llegar. Así como está es medio aburrido, así que vamos a enchular este gráfico con imágenes.</p>
</section>
<section id="trabajando-con-las-imágenes" class="level2">
<h2 class="anchored" data-anchor-id="trabajando-con-las-imágenes">Trabajando con las imágenes</h2>
<p>Como contaba antes, primero armé una presentación en Canva y pegué todas las imágenes de cada personaje para que queden más o menos del mismo tamaño. Luego guardé cada imagen en un archivo separado, y en este caso las guardé en una carpeta que se llama <code>clones</code>.</p>
<p>Podría haber hecho la carga de las fotos una por una, pero quería hacer este trabajo lo más eficiente posible tratando de repetir pasos. Para eso tenemos que crear un data frame que tenga por un lado el nombre de la persona <strong>tal cual</strong> lo tenemos en la tabla de las votaciones, y que incluya la dirección a la imagen.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Creamos un vector con los nombres de las personas</span></span>
<span id="cb9-2">persona <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> resultados <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb9-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(persona) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb9-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pull</span>()</span>
<span id="cb9-5"></span>
<span id="cb9-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Creo un vector de imágenes</span></span>
<span id="cb9-7">ruta <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pics"</span>        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Ruta de las fotos</span></span>
<span id="cb9-8">extension <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"png"</span>   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extensión de los archivos de imágenes</span></span>
<span id="cb9-9"></span>
<span id="cb9-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># nombres de los archivos</span></span>
<span id="cb9-11">imagen <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ben"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Brad"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Javier"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"jeff"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"keanu"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mono"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nico"</span>, </span>
<span id="cb9-12">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ricky"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"roberto"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"russell"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sergio"</span>)</span>
<span id="cb9-13"></span>
<span id="cb9-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Creo el vector de fotos con dirección y extensión completa</span></span>
<span id="cb9-15">foto <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_c</span>(ruta, imagen, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sep =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/"</span>)</span>
<span id="cb9-16">foto <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_c</span>(foto, extension, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sep =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>)</span>
<span id="cb9-17"></span>
<span id="cb9-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Creo el dataframe y lo agrego al dataframe resultados</span></span>
<span id="cb9-19">pics <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(persona, foto)</span>
<span id="cb9-20"></span>
<span id="cb9-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Ver el resultado de este proceso</span></span>
<span id="cb9-22">pics</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>   persona             foto
1      Ben     pics/Ben.png
2     Brad    pics/Brad.png
3   Javier  pics/Javier.png
4     Jeff    pics/jeff.png
5    Keanu   pics/keanu.png
6     Mono    pics/mono.png
7     Nico    pics/nico.png
8    Ricky   pics/ricky.png
9  Roberto pics/roberto.png
10 Russell pics/russell.png
11  Sergio  pics/sergio.png</code></pre>
</div>
</div>
<p>Ahora tenemos un data frame de 11 filas y dos columnas, con el nombre de cada persona, y la dirección al archivo que contiene las imágenes de cada una. Estos datos lo podemos integrar al data frame que veníamos trabajando con los resultados de Facha y Copadez promedio de cada personaje.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Unimos los datasets</span></span>
<span id="cb11-2">resultados <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">left_join</span>(resultados, pics)</span>
<span id="cb11-3"></span>
<span id="cb11-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(resultados)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 6 × 4
  persona facha_promedio copadez_promedio foto           
  &lt;chr&gt;            &lt;dbl&gt;            &lt;dbl&gt; &lt;chr&gt;          
1 Ben               8.23             6.47 pics/Ben.png   
2 Brad              8.52             7.55 pics/Brad.png  
3 Javier            6.89             6.56 pics/Javier.png
4 Jeff              5.06             6.45 pics/jeff.png  
5 Keanu             7.77             8.74 pics/keanu.png 
6 Mono              3.30             6.30 pics/mono.png  </code></pre>
</div>
</div>
</section>
<section id="poniendo-imágenes-al-gráfico" class="level2">
<h2 class="anchored" data-anchor-id="poniendo-imágenes-al-gráfico">Poniendo imágenes al gráfico</h2>
<p>Y ahora si, a lo que venimos: incluir las fotos en el gráfico</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># El gráfico final</span></span>
<span id="cb13-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(resultados, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> copadez_promedio, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> facha_promedio)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_image</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">image=</span>foto), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.08</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">limits =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">limits =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Facha y Copadez Promedio de cada Personaje"</span>,</span>
<span id="cb13-8">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Copadez Promedio"</span>, </span>
<span id="cb13-9">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Facha Promedio"</span>,</span>
<span id="cb13-10">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">caption =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"n = 66</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Ninguna tía participó del relevamiento"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://chechoid.netlify.app/posts/haciendo-boludeces-en-r/index_files/figure-html/grafico_final-1.png" class="img-fluid" width="960"></p>
</div>
</div>
<p>Como conclusión del análisis <strong>los datos dicen</strong> que estoy alejado de las características de Nicolás del Caño y Roberto Baradel por ejemplo y <strong>tengo características muy similares que Keanu Reeves</strong>. O sea que los datos indican que me parezco a Keanu. Dato, no opinión 😎.</p>
</section>
<section id="qué-saqué-de-todo-esto" class="level2">
<h2 class="anchored" data-anchor-id="qué-saqué-de-todo-esto">¿Qué saqué de todo esto?</h2>
<p>En primer lugar aprender a usar un paquete nuevo, <code>ggimage</code> que permite incluir imágenes en los gráficos. Por otro lado hubo un error en el diseño del formulario (poner “Facha del Mono”) lo que implicó un paso extra en la limpieza de los datos. Ese error en este proyecto me ayudó a prevenir un potencial problema con una encuesta de diversidad para un cliente.</p>
<p>Otro tema fue la manipulación de los datos, pivotearlos de un formato “ancho” a uno “largo” y después nuevamente a uno “ancho” otra vez. Una vez que logré eso el cálculo de los resultados salió de manera muy simple.</p>
<p>Todo esto llevó dos días de trabajo, mirar tutoriales y documentación y mucha prueba y error. La verdad es que fue mucho trabajo, pero el hecho de ser un proyecto medio delirante le sacó mucha presión y me dió la motivación para aprender algo nuevo y superar las barreras y errores que me fui encontrando. Creo que el hecho que sea un proyecto divertido me liberó para tratar interpretar los mensajes de error y buscar la solución apropiada.</p>
<p>Este tipo de proyecto me parece ideal para realizar apenas terminás un tutorial o un curso. Los datos que usamos en un tutorial siempre están bastante limpios, controlados, divinos y cuando trabajás con tus propios datos te encontrás con barreras. Realizar este tipo de análisis sin la presión de “agregar valor” al negocio y pone a prueba las habilidades que tenés.</p>
<p>Así que te invito a que hagas un proyecto ridículo y que lo compartas con el mundo.</p>
<section id="final" class="level3">
<h3 class="anchored" data-anchor-id="final">Final</h3>
<p>Si querés ver el script final de este post, lo podés encontrar en el repositorio <a href="https://github.com/chechoid/chechoid-blog/blob/main/posts/haciendo-boludeces-en-r/index.qmd">en este link</a>.</p>
<p>Y como regalo final, me reí mucho con los comentarios que hicieron las personas que participaron del relevamiento de datos así que los comparto con ustedes:</p>
<div class="cell">
<div class="cell-output-display">

<div id="qnclmewjof" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>#qnclmewjof table {
  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

#qnclmewjof thead, #qnclmewjof tbody, #qnclmewjof tfoot, #qnclmewjof tr, #qnclmewjof td, #qnclmewjof th {
  border-style: none;
}

#qnclmewjof p {
  margin: 0;
  padding: 0;
}

#qnclmewjof .gt_table {
  display: table;
  border-collapse: collapse;
  line-height: normal;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#qnclmewjof .gt_caption {
  padding-top: 4px;
  padding-bottom: 4px;
}

#qnclmewjof .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#qnclmewjof .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 3px;
  padding-bottom: 5px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#qnclmewjof .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#qnclmewjof .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#qnclmewjof .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#qnclmewjof .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#qnclmewjof .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#qnclmewjof .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#qnclmewjof .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#qnclmewjof .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#qnclmewjof .gt_spanner_row {
  border-bottom-style: hidden;
}

#qnclmewjof .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  text-align: left;
}

#qnclmewjof .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#qnclmewjof .gt_from_md > :first-child {
  margin-top: 0;
}

#qnclmewjof .gt_from_md > :last-child {
  margin-bottom: 0;
}

#qnclmewjof .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#qnclmewjof .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

#qnclmewjof .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#qnclmewjof .gt_row_group_first td {
  border-top-width: 2px;
}

#qnclmewjof .gt_row_group_first th {
  border-top-width: 2px;
}

#qnclmewjof .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#qnclmewjof .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#qnclmewjof .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#qnclmewjof .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#qnclmewjof .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#qnclmewjof .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#qnclmewjof .gt_last_grand_summary_row_top {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: double;
  border-bottom-width: 6px;
  border-bottom-color: #D3D3D3;
}

#qnclmewjof .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#qnclmewjof .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#qnclmewjof .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#qnclmewjof .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#qnclmewjof .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#qnclmewjof .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#qnclmewjof .gt_left {
  text-align: left;
}

#qnclmewjof .gt_center {
  text-align: center;
}

#qnclmewjof .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#qnclmewjof .gt_font_normal {
  font-weight: normal;
}

#qnclmewjof .gt_font_bold {
  font-weight: bold;
}

#qnclmewjof .gt_font_italic {
  font-style: italic;
}

#qnclmewjof .gt_super {
  font-size: 65%;
}

#qnclmewjof .gt_footnote_marks {
  font-size: 75%;
  vertical-align: 0.4em;
  position: initial;
}

#qnclmewjof .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#qnclmewjof .gt_indent_1 {
  text-indent: 5px;
}

#qnclmewjof .gt_indent_2 {
  text-indent: 10px;
}

#qnclmewjof .gt_indent_3 {
  text-indent: 15px;
}

#qnclmewjof .gt_indent_4 {
  text-indent: 20px;
}

#qnclmewjof .gt_indent_5 {
  text-indent: 25px;
}
</style>
<table class="gt_table" data-quarto-disable-processing="false" data-quarto-bootstrap="false">
  <thead>
    
    <tr class="gt_col_headings">
      <th class="gt_col_heading gt_columns_bottom_border gt_left" rowspan="1" colspan="1" scope="col" id="Comentarios">Comentarios</th>
    </tr>
  </thead>
  <tbody class="gt_table_body">
    <tr><td headers="comentarios" class="gt_row gt_left">te rompí los patrones a la merd</td></tr>
    <tr><td headers="comentarios" class="gt_row gt_left">jaja me rei mucho!</td></tr>
    <tr><td headers="comentarios" class="gt_row gt_left">Caruso a la Final!</td></tr>
    <tr><td headers="comentarios" class="gt_row gt_left">Johnny Depp, 8/8</td></tr>
    <tr><td headers="comentarios" class="gt_row gt_left">Hajajja</td></tr>
    <tr><td headers="comentarios" class="gt_row gt_left">De Brad Pitt te copiaste el peinado, no?</td></tr>
    <tr><td headers="comentarios" class="gt_row gt_left">¿es requisito tener pelo largo para parecer fachero?  mostrame indicadores</td></tr>
    <tr><td headers="comentarios" class="gt_row gt_left">Sergio vos no estas bien haciendo esto!!!  Jajaja</td></tr>
    <tr><td headers="comentarios" class="gt_row gt_left">Falta Denicolay</td></tr>
    <tr><td headers="comentarios" class="gt_row gt_left">Jajaj muy bueno</td></tr>
    <tr><td headers="comentarios" class="gt_row gt_left">Haces todo esto para levantarte minas Mora, lo sabemos!!!</td></tr>
    <tr><td headers="comentarios" class="gt_row gt_left">ME ENCANTÓ! curiosa, dinámica y original iniciativa como siempre!!</td></tr>
    <tr><td headers="comentarios" class="gt_row gt_left">Copado el test!!</td></tr>
    <tr><td headers="comentarios" class="gt_row gt_left">¿todos hombres?</td></tr>
    <tr><td headers="comentarios" class="gt_row gt_left">Hajajja</td></tr>
    <tr><td headers="comentarios" class="gt_row gt_left">WTH??</td></tr>
    <tr><td headers="comentarios" class="gt_row gt_left">Sos un capo!!! me divertí mucho!!!</td></tr>
    <tr><td headers="comentarios" class="gt_row gt_left">Falta el test de mujeres.....</td></tr>
    <tr><td headers="comentarios" class="gt_row gt_left">Bronn, de game of thrones.</td></tr>
    <tr><td headers="comentarios" class="gt_row gt_left">Muy buen ejercicio!  A algunos personajes el 1 le quedaba grande! habiliten el 0 jaja Éxitos!</td></tr>
    <tr><td headers="comentarios" class="gt_row gt_left">Un genio Sergio 😂😂😂 Podría ser también a la versión adulta del niño del sexto sentido, el que dice"veo gente muerta" ¿? 🤔</td></tr>
    <tr><td headers="comentarios" class="gt_row gt_left">Puedo decir que la foto que te sacaste, es muy de MA de instagram</td></tr>
    <tr><td headers="comentarios" class="gt_row gt_left">Jaja me hiciste reír. Cómo no soy de Argentina tuve que googlear algunos, pero todo bien. Super entretenido</td></tr>
  </tbody>
  
  
</table>
</div>
</div>
</div>
<p>Muchas gracias por leer!</p>
<p><img src="https://chechoid.netlify.app/posts/haciendo-boludeces-en-r/https:/media.giphy.com/media/QAsBwSjx9zVKoGp9nr/giphy.gif" class="img-fluid"></p>


</section>
</section>
</section>

 ]]></description>
  <category>fun</category>
  <category>ggplot2</category>
  <category>proyectos</category>
  <guid>https://chechoid.netlify.app/posts/haciendo-boludeces-en-r/index.html</guid>
  <pubDate>Thu, 01 Sep 2022 03:00:00 GMT</pubDate>
</item>
<item>
  <title>Indicadores de Capacitación</title>
  <dc:creator>Checho </dc:creator>
  <link>https://chechoid.netlify.app/posts/indicadores_capacitacion/index.html</link>
  <description><![CDATA[ 




<section id="indicadores-de-capacitación" class="level1">
<h1>Indicadores de Capacitación</h1>
<p><img src="https://chechoid.netlify.app/posts/indicadores_capacitacion/https:/github.com/chechoid/chechoid-blog/blob/main/posts/indicadores_capacitacion/16251.jpg?raw=true" class="img-fluid"></p>
<p>Con la Capacitación en las empresas pasa algo curioso: hace unos años atrás, entre mis compañeros de la Maestría de Data Mining hice una encuesta sobre beneficios, y una de las preguntas que hacía era&nbsp;<em>“¿Qué beneficio que no tenés hoy te gustaría tener?”</em>. Y 1 de cada 4 respuestas estaba relacionada con Capacitación (capacitación in company, desde cuotas en posgrados, certificaciones, etc.). Y yo pensaba por dentro <em>“Pero… la capacitación no es un beneficio”</em>. Sin embargo las personas perciben a la capacitación como un beneficio.</p>
<p>Los cambios que impone la tecnología, y la rapidez con la que avanza, hacen que, como dijo&nbsp;<a href="https://www.linkedin.com/in/diegobekerman/">Diego Bekerman</a>, las empresas dejen de buscar&nbsp;<em>“graduados de”</em>&nbsp;para buscar&nbsp;<em>“personas que saben de”</em>. Esto plantea una nueva necesidad de Planificación Estratégica de Capital Humano en donde se plantean las capacidades que hoy tienen las personas y se las contrasta con las capacidades futuras que requiere la empresa. Y acá surge una de las primeras cuestiones: Estas capacidades, ¿las desarrollamos internamente o las salimos a buscar al mercado?</p>
<p>Después tenemos variables de contexto. No debe haber ni un sólo CEO, Gerente General o Dueño de una empresa que desconozca el valor y la importancia de la capacitación de sus empleados. Sin embargo, es uno de los primeros presupuestos que se corta en épocas de vacas flacas. Y uno de los principales factores que determinan estas decisiones seguramente se relaciona con que no cuentan con suficiente información sobre el impacto de la capacitación en los resultados de la empresa.</p>
<p>Nótese que escribí impacto en los resultados, no ROI. Ampliaremos.</p>
<p>Entonces tenemos empleados que demandan capacitación, negocios que necesitan nuevas capacidades, y una constante tensión presupuestaria. Sin mencionar el contexto económico recesivo. ¿Cómo podemos usar indicadores para administrar, planificar y conseguir presupuesto para gestionar la capacitación en este contexto?</p>
<p>En primer lugar conociendo las necesidades del negocio.Y para esto es necesario entender qué es lo que demandan las personas que dirigen las empresas.</p>
<p>En&nbsp;<em>Learning Analytics</em>, John R Mattox II, Mark Van Buren y Jean Martin, plantean que los CEO’s pretenden que midamos:</p>
<ul>
<li><p><strong>Aplicación</strong>: ¿Cómo Podemos aumentar la aplicación de nuevas habilidades en el trabajo</p></li>
<li><p><strong>Resultados</strong>: ¿En qué grado un programa de capacitación mejorará un resultado de negocio específico?</p></li>
<li><p><strong>Valor</strong>: ¿Cuál será el Retorno de Inversión?</p></li>
</ul>
<p>¿Qué es lo que usualmente medimos en gestión de capacitación?</p>
<ul>
<li><p>Costo de capacitación por empleado</p></li>
<li><p>Satisfacción con la capacitación.</p></li>
<li><p>Horas de Capacitación por Empleado</p></li>
<li><p>Gastos de Capacitación Externa.</p></li>
</ul>
<p>Evidentemente hay un mismatch entre la información que <strong>demandan</strong> las personas que dirigen las empresas y la información que proveemos desde Recursos Humanos.</p>
<p><a href="https://www.linkedin.com/in/alec-levenson-8915475/">Alec Levenson</a>, uno de los autores más “hardcore evidence” de People Analytics que sigo, de formación en Economía, plantea en una podcast que el ROI no siempre es medible, por ejemplo,de una capacitación en empatía para líderes. Alec explica que el ROI se mide fundamentalmente en cashflow, y que no todo es traducible en términos económicos.</p>
<p>Un punto interesante que plantea Levenson es dice que si encontramos vínculos entre cómo las personas operan en el negocio, en cómo se comunican, se hacen cargo y se comprometen, y en cómo enfocan su tiempo y energía en alcanzar la estrategia del negocio, y haciendo lo que es necesario hacer para <strong>crear ventajas competitivas</strong>, es todo lo que necesitamos mostrar. Si logramos establecer una relación consistente entre los comportamientos de las personas y las ventajas competitivas, generamos información más valiosa y expresiva (agrego yo) que el ROI.</p>
<section id="de-vuelta-a-la-universidad" class="level2">
<h2 class="anchored" data-anchor-id="de-vuelta-a-la-universidad"><strong>De vuelta a la Universidad</strong></h2>
<p>Si buscamos en nuestros apuntes y libros de la universidad como medir la gestión de capacitación, seguramente nos vamos a encontrar con los modelos de&nbsp;<strong>Donald Kirkpatrick</strong>&nbsp;y de&nbsp;<a href="https://www.linkedin.com/in/roiinstituteinc/"><strong>Jack Phillips</strong></a>.</p>
<p>El <strong>Modelo de 4 Niveles de Evaluación</strong> de Kirkpatrick propone un enfoque para medir el impacto de la capacitación en los siguientes niveles:</p>
<p>El primer nivel apunta a medir la satisfacción de los colaboradores con el curso y con el facilitador. Muchas empresas sólo están midiendo este nivel. El aprendizaje busca medir si las personas adquirieron nuevos conocimientos y habilidades.</p>
<p>Respecto al nivel 3, de medir conductas, Kirkpatrick plantea analizar si hubo un cambio de comportamiento luego de la capacitación. Volvamos a la entrevista de Alec Levenson, ¿cuáles son los comportamientos que crean ventajas competitivas?</p>
<p>Finalmente el 4° nivel es el de resultados, que ahí buscaremos ver el impacto de las acciones de capacitación en resultados tanto operativos como de clima laboral por ejemplo.</p>
<p><strong>Jack Phillips</strong> desarrolló la&nbsp;<strong>Metodología ROI</strong>&nbsp;que en gran parte se sustenta en el modelo de Kirkpatrick, cambiando ligeramente los primeros 4 niveles, y añadiendo el del ROI.</p>
<ol type="1">
<li><p>Reacción y acción planificada.</p></li>
<li><p>Aprendizaje.</p></li>
<li><p>Aplicación.</p></li>
<li><p>Impacto.</p></li>
<li><p>Retorno de Inversión.</p></li>
</ol>
<p>Estos 5 niveles son parte de la Metodología ROI que incluye además la planificación, la recolección de datos, su análisis y reporte.</p>
<p>Mi postura es que si hoy sólo estamos midiendo horas de capacitación y costos, lograr avanzar al nivel 3 (Conductas o Aplicación), ya es un enorme salto de calidad de las métricas del área. Si logramos eso, será más fácil medir resultados, y ya habrá tiempo para medir el ROI.</p>
<p>Kirkpatrick desarrolló su modelo en la década del ’50, mientras que Phillips lo hizo a principios de los ’80. En 2007 <a href="https://www.linkedin.com/in/bersin/">Josh Bersin</a> publicó&nbsp;<em>The Training Measurement Book</em>, en donde se enfoca principalmente en la planificación y en el alineamiento de la capacitación con las necesidades del negocio.</p>
<p>El modelo de Bersin propone 9 métricas críticas para su&nbsp;<strong>Modelo de Medición de Impacto</strong>. Estas métricas son:</p>
<ol type="1">
<li><p>Satisfacción.</p></li>
<li><p>Aprendizaje.</p></li>
<li><p>Adopción (tasa del público target que completó el proceso de aprendizaje).</p></li>
<li><p>Utilidad.</p></li>
<li><p>Eficiencia.</p></li>
<li><p>Alineamiento.</p></li>
<li><p>Logros de objetivos desde la perspectiva de los clientes.</p></li>
<li><p>Desempeño Individual.</p></li>
<li><p>Desempeño del Negocio.</p></li>
</ol>
<p>Si logramos incorporar métricas que incluyan los aspectos de cualquiera de estos modelos, más nuevas tendencias como el&nbsp;<a href="https://data-4hr.com/2017/11/08/scrap-learning-la-capacitacion-desaprovechada/">Scrap Learning</a>&nbsp;(incluyendo la perspectiva de los jefes) podemos construir un set de información muy valiosa para los stakeholders de la organización. Correr el foco del ROI y enfocarlo en las ventajas competitivas (eso que la empresa hace bien y que la distingue de otras empresas) también nos permite canalizar los esfuerzos de gestión y de análisis en donde más valor aportamos a la rentabilidad del negocio.</p>


</section>
</section>

 ]]></description>
  <category>code free</category>
  <category>people analytics</category>
  <category>kpi</category>
  <category>capacitación</category>
  <guid>https://chechoid.netlify.app/posts/indicadores_capacitacion/index.html</guid>
  <pubDate>Sun, 01 Mar 2020 03:00:00 GMT</pubDate>
</item>
<item>
  <title>Scrap Learning: La Capacitación Desaprovechada</title>
  <dc:creator>Checho </dc:creator>
  <link>https://chechoid.netlify.app/posts/scrap_learning/index.html</link>
  <description><![CDATA[ 




<section id="scrap-learning-la-capacitación-desaprovechada" class="level1">
<h1><strong>SCRAP LEARNING – LA CAPACITACIÓN DESAPROVECHADA</strong></h1>
<p><em>En Recursos Humanos una de las obsesiones principales es medir el Retorno de la Inversión (ROI) de la capacitación, lo cual, si bien es posible de medir, requiere un esfuerzo enorme. En cambio, poder medir cuánta plata se desperdicia por la <strong>no aplicación</strong> del conocimiento adquirido en las capacitaciones es mucho más sencillo, y también es una métrica muy valiosa para utilizar.</em></p>
<p>El <strong><em>Scrap Learning</em></strong> es una forma de medir cuántos de los conocimientos adquiridos en las capacitaciones <strong>no se trasladan</strong> al trabajo, lo cual es mucho más sencillo y tan valioso de medir como el ROI.</p>
<p>La investigación indica el promedio de mercado de Scrap Learning entre las empresas que no lo miden es del 45%. Es decir que si tenemos un presupuesto anual de $ 500.000 para las capacitaciones, $ 225.000 es dinero mal invertido y por ende, la capacitación deja de ser una inversión para convertirse en un costo.</p>
<p><img src="https://chechoid.netlify.app/posts/scrap_learning/https:/i.pinimg.com/originals/5b/85/0a/5b850afdf51756a3b48667d9acbee743.jpg" class="img-fluid"></p>
<section id="para-muestra-basta-con-un-botón" class="level2">
<h2 class="anchored" data-anchor-id="para-muestra-basta-con-un-botón"><strong>“Para muestra basta con un botón”</strong></h2>
<p>Una forma sencilla de medir el Scrap Learning es preguntando a los participantes de un curso cuánto del conocimiento adquirido se aplicará al trabajo. El porcentaje de contenido que <strong>NO</strong> aplicarán al trabajo forma parte del Scrap Learning.</p>
<p><em>Ejemplo</em>: Le preguntamos a un participante cuántos de los conocimientos adquiridos en una capacitación estima aplicar en sus tareas cotidianas. Si dice que piensa aplicar el 60% del contenido a su trabajo, el scrap learning es del 40%.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://chechoid.netlify.app/posts/scrap_learning/https:/github.com/chechoid/chechoid-blog/blob/main/posts/scrap_learning/archivos/formula_scrap_learning.png?raw=true" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
<section id="capacitar-sobre-capacitar" class="level2">
<h2 class="anchored" data-anchor-id="capacitar-sobre-capacitar">Capacitar sobre Capacitar</h2>
<p>Una de las primeras cosas que debemos hacer los Responsables de Capacitación y Desarrollo es aclarar <strong>para qué sirve</strong> una capacitación. ¿Cuántas veces hemos escuchado “<em>Fulano está desmotivado… mándalo a hacer un curso</em>”? ¿O cuántas veces acordamos con un empleado conflictivo o de bajo desempeño pagarle un posgrado? ¿Hemos enviado alguna vez a una persona a una capacitación sobre una tecnología que no usamos en nuestras empresas?</p>
<p>Incluso de parte de los colaboradores hay una percepción imprecisa sobre la capacitación. Una encuesta que hicimos a empleados de nuestros clientes, frente a la pregunta “<em>¿Qué beneficio que no tenés hoy, te gustaría tener?</em>”, prácticamente 1 de cada 4 respuestas estaba relacionada con capacitación o beneficios en posgrados.</p>
<p>Esto deja entrever, que lo primero que necesitamos hacer desde Capacitación y Desarrollo es “<em>re-educar</em>” a la empresa sobre cuál es la utilidad y finalidad de las capacitaciones y en qué casos usarlas.</p>
</section>
<section id="las-preguntas-clave" class="level2">
<h2 class="anchored" data-anchor-id="las-preguntas-clave">Las Preguntas Clave</h2>
<p><em>“Una capacitación efectiva <strong>mejorará el desempeño</strong> del participante y del área donde trabaja.”</em></p>
<p>Por el contrario, cuando las capacitaciones no son efectivas y el scrap learning es alto, la performance del colaborador y del sector no mejorarán aún cuando asistan al mejor curso del mundo.&nbsp;Una actividad de formación debe aportar valor al participante y a su área. Para ello, hay 3 preguntas claves para hacer:</p>
<ol type="1">
<li><p>¿Cuánto espera que su performance mejore relacionado con el contexto del curso relacionado con todos los factores, incluido el programa de desarrollo?</p></li>
<li><p>¿Cuánto de esa mejora se la atribuiría exclusivamente a la capacitación?</p></li>
<li><p>¿Cuánto tiempo dedica realmente a tareas relacionadas con el programa de desarrollo?</p></li>
</ol>
</section>
<section id="factores-a-tener-en-cuenta" class="level2">
<h2 class="anchored" data-anchor-id="factores-a-tener-en-cuenta">Factores a Tener en Cuenta</h2>
<p>En nuestra experiencia, existen varias causas que provocan el scrap learning. La tabla a continuación resume algunos de los principales factores que inciden en esta métrica.</p>
<p>En la primera columna hay causas que están bajo el control del área de Capacitación y Desarrollo, como ser la calidad del instructor, del material, la alineación con las necesidades del negocio, entre otras. Pero sin dudas uno de los factores más importantes e influyentes es la involucración de los Jefes y Gerencias en el proceso de Capacitación.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://chechoid.netlify.app/posts/scrap_learning/https:/github.com/chechoid/chechoid-blog/blob/main/posts/scrap_learning/archivos/control_contexto.png?raw=true" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Como en muchas cosas de Recursos Humanos, la clave son los líderes. ¿De qué manera pueden influir en la reducción del scrap learning? Básicamente hay 5 factores preponderantes:</p>
<ul>
<li><p>Elegir a la persona idónea para asistir a un curso y que sea el indicado para adquirir y aplicar nuevos conocimientos a sus tareas.</p></li>
<li><p>Definir las expectativas con el participante&nbsp;<strong>antes</strong>&nbsp;del inicio de la capacitación.</p></li>
<li><p>Involucrarse con la aplicación de los conocimientos nuevos una vez terminada la actividad de formación.</p></li>
<li><p>Realizar un seguimiento de las expectativas fijadas antes de la capacitación.</p></li>
<li><p>Proveer recursos necesarios para dar soporte al rendimiento.</p></li>
</ul>
<p>Otro dato clave es que, si el conocimiento adquirido durante una capacitación no se aplica dentro de las&nbsp;<strong>6 semanas</strong>&nbsp;posteriores a la capacitación, ningún conocimiento adquirido en esa actividad se trasladará al trabajo.</p>
</section>
<section id="recomendaciones" class="level2">
<h2 class="anchored" data-anchor-id="recomendaciones">Recomendaciones</h2>
<ul>
<li><p>Medir la información de todos los cursos planificados de la misma manera, usando las mismas herramientas y preguntas. Esto nos brindará consistencia para comparar los resultados y realizar estimaciones más sofisticadas.</p></li>
<li><p>Crear una hoja de cálculo en Excel, o un tablero con métricas con algunas métricas clave: scrap learning, desempeño, e inversión por ejemplo para cada curso.</p></li>
<li><p>Crear una serie de reglas que brinden un marco para el proceso de mejora continuo, por ejemplo:</p>
<ul>
<li><p>Para el top 5 de los cursos, no realizar cambios, reinvertir en ellos, continuar desarrollándolos, y si ocurrieran cambios que sean en pos de conseguir una reducción de costos siempre y cuando la calidad no se vea afectada, y de esa manera mejorar el ROI.</p></li>
<li><p>Para el 10% más bajo de los cursos, eliminar cualquier curso que no esté alineado con los objetivos de la empresa. Para aquellos que están alineados con las necesidades de negocio, reinvertir para revisarlos.</p></li>
<li><p>Para el 85% de los cursos que están en el medio, continuar realizándolos, pero buscando opciones que permitan reducir el scrap y maximizar los beneficios.</p></li>
</ul></li>
</ul>
</section>
<section id="conclusión" class="level2">
<h2 class="anchored" data-anchor-id="conclusión">Conclusión</h2>
<p>El Retorno de Inversión (ROI) de una capacitación es una medida compleja de estimar, en cambio, el Scrap Learning es más sencillo de medir y de solucionar.</p>
<p>Mantener un bajo nivel de Scrap Learning, no sólo se materializa en resultados en la organización, sino que además aumenta la confianza sobre el proceso de capacitación generando un “círculo virtuoso” que contribuye a mantenerlo en ese estado.</p>
<p>Ésta es una métrica poderosa para evaluar la efectividad de las capacitaciones que realizamos dentro de una organización. Como Responsables de Capacitación y Desarrollo, es nuestro deber asegurar la calidad de la capacitación (del instructor, del contenido, y la alineación con necesidades de negocio), pero <strong>los jefes juegan un rol clave</strong> a la hora de trasladar los conocimientos de la formación al trabajo cotidiano. De esto surge la necesidad de trabajar codo a codo con las áreas para involucrar a sus jefaturas y gerencias, dándoles el soporte necesario para <strong>mejorar el impacto de las capacitaciones, mejorar el rendimiento de sus equipos e incrementar sus propios resultados e imagen.</strong></p>


</section>
</section>

 ]]></description>
  <category>code free</category>
  <category>people analytics</category>
  <category>kpi</category>
  <category>capacitación</category>
  <guid>https://chechoid.netlify.app/posts/scrap_learning/index.html</guid>
  <pubDate>Fri, 11 Aug 2017 03:00:00 GMT</pubDate>
</item>
</channel>
</rss>
