---
title: "Gestionar capacitaci√≥n buscando el mejor vino"
lang: es 
author: "Checho"
date: "01/23/2025"
format:
  html:
    toc: true
    toc-location: left
    code-fold: true
    code-summary: "Ver c√≥digo"
    code-copy: hover
categories: [ggplot2, proyectos, capacitaci√≥n, training, tidyverse, dplyr, data viz, people analytics, fun, r, python, tidytuesday]
execute: 
  warning: false
  error: false
  message: false
  dpi: 600
---

# C√≥mo la b√∫squeda de los mejores vinos de Mendoza puede ayudar a la gesti√≥n de proveedores de capacitaci√≥n

![Yo durante mi luna de miel en Finca Adelma.](IMG_20220316_132649177_HDR.jpg){fig-align="left" width="292"}

El objetivo de este post es mostrar c√≥mo se puede aplicar un an√°lisis de un tema cualquiera, a un problema de RRHH.

La raz√≥n detr√°s de esta idea es que cuando estamos aprendiendo a usar cualquier programa de an√°lisis de datos, ll√°mese R, Python, Power BI o Excel, encontramos mucho contenido sobre muchos tipos de an√°lisis, pero muy poco contenido relacionado con RRHH. **Y eso es algo que podemos hacer por nuestra cuenta.**

Con esto en mente, lo que vamos a hacer es ver c√≥mo podemos aprovechar un an√°lisis en el cual buscamos en qu√© regi√≥n de Mendoza podemos hallar los mejores malbecs[^1], haciendo un r√°nking de las mejores regiones. Luego veremos c√≥mo ese mismo tipo de an√°lisis lo podemos usar para **detectar cu√°les son los mejores proveedores de capacitaci√≥n de una empresa**.

[^1]: Mendoza es la provincia m√°s importante en producci√≥n de vinos de Argentina, y la cepa m√°s representativa del pa√≠s es el malbec.

# Primer An√°lisis: D√≥nde encontrar los mejores vinos

Para el primer ejercicio vamos a imaginar que estamos planeando un viaje a Mendoza, y queremos saber en qu√© regi√≥n se producen los mejores malbecs.

Vamos a usar un dataset que se llama [Wine Ratings Dataset](https://github.com/rfordatascience/tidytuesday/tree/master/data/2019/2019-05-28) que lo comparti√≥ la comunidad de R a trav√©s su iniciativa [#TidyTuesday](https://github.com/rfordatascience/tidytuesday) en la que cada martes, comparten un dataset diferente para que cualquier persona pueda practicar y compartir su trabajo. Ah√≠ se puede encontrar datos sobre casi cualquier cosa.

Manos a la obra... Sal√∫! üç∑

## Librer√≠as y datos

Vamos a usar varios paquetes dentro de `tidyverse` y cargamos los datos directamente desde el repositorio de GitHub del proyecto TidyTuesday.

```{r}
library(tidyverse)

# Carga de datos
wine_ratings <- read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-05-28/winemag-data-130k-v2.csv")

# Filtramos los datos de la provincia de Mendoza
wine_ar <- wine_ratings %>% 
  filter(province == "Mendoza Province") 
```

El dataset original contiene `r nrow(wine_ratings)` filas y `r ncol(wine_ratings)`. Despu√©s de filtrar los datos s√≥lo por `Mendoza Province` nos quedamos con `r nrow(wine_ar)` filas que representan los puntajes que personas expertas le han dado a los vinos. De ahora en m√°s seguiremos trabajando con el dataset `wine_ar`.

```{r}
# Exploremos el contenido del dataset
glimpse(wine_ar)
```

Solo de explorar el dataset se me hace agua la boca. En fin, sigamos...

## Calcular puntaje promedio de vinos por regiones

El paso siguiente es filtrar por la cepa `Malbec` y luego podemos calcular un promedio de los puntajes de la columna `points` agrupados por la columna `region_1` as√≠ podemos establecer un ranking de las regiones que tienen los mejores Malbecs de Mendoza.

```{r}
# Filtramos por Malbec
malbec <- wine_ar %>% 
  filter(variety == "Malbec")

# Creamos un ranking de las mejores regiones productoras de Malbec
promedio_regiones <- malbec %>% 
  filter(!is.na(region_1)) %>%  # Eliminamos filas sin datos
  group_by(region_1) %>%        # Agrupamos por region
  summarise(puntaje_promedio = mean(points)) %>% # Calculamos el promedio
  arrange(desc(puntaje_promedio)) # Ordenamos de mayor a menor

# Ver el resultado
promedio_regiones
```

De esta manera descubrimos, para mi sorpresa incluso, que en Perdriel (una [localidad](https://es.wikipedia.org/wiki/Perdriel_(Mendoza)) dentro de Luj√°n de Cuyo) podemos encontrar los mejores malbecs de la provincia.

Y ahora esto lo podemos visualizar en un gr√°fico.

```{r}
ggplot(promedio_regiones, aes(x = puntaje_promedio, 
                              y = reorder(region_1, puntaje_promedio))) + # Ordenamos las regiones por puntaje_promedio
  geom_col(fill = "#82163D") + # Color malbec ;p
  theme_minimal()  + # Modificamos el estilo del gr√°fico
  # A√±adimos el t√≠tulo al gr√°fico y a los ejes
  labs(title = "Ranking de regiones de Mendoza con los mejores Malbec", 
       x = "Puntaje Promedio",
       y = "Regi√≥n de Mendoza") +
  theme(title = element_text(color = "#82163D"),
        plot.title.position = "plot") +
  # A√±adimos el puntaje a cada barra
  geom_text(aes(label = round(puntaje_promedio,1)),
            size = 2.5,
            color = "white",
            hjust = 1.2) 

# Guardamos el gr√°fico en un archivo png
ggsave("output/ranking_regiones.png", dpi = 300, create.dir = TRUE)
```

As√≠ podemos ver f√°cilmente las localidades con los mejores vinos malbec, y podr√≠amos planificar el viaje asegur√°ndonos de visitar las mejores bodegas.

Despu√©s me agradecen.

![](https://media0.giphy.com/media/v1.Y2lkPTc5MGI3NjExa3RpMWlkZGhpam9zdWs4MmoweXkzM3drcm45ZzFleXdzOTk4MjdrbyZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/8Iv5lqKwKsZ2g/giphy.gif)

# Segundo An√°lisis: ¬øCu√°les son los mejores proveedores de capacitaci√≥n en mi empresa?

C√≥mo dec√≠a anteriormente. Es probable que si trabajamos en un equipo de Capacitaci√≥n, y busquemos c√≥mo hacer un an√°lisis de proveedores de capacitaci√≥n, no encontremos ning√∫n art√≠culo que nos ense√±e a hacerlo.

Pero, podemos usar el ejemplo del ranking de vinos para hacer un an√°lisis similar usando las encuestas de capacitaci√≥n que hacemos completar a nuestros empleados despu√©s que terminan un curso.

## Los datos

Para realizar este ejercicio, vamos a usar un dataset ficticio, que simula compilar resultados de encuestas de capacitaci√≥n, e incluye m√©tricas como:

-   **satisfaction:** eval√∫a en qu√© medida el curso gust√≥ o no.

-   **facilitator_score:** punt√∫a la calidad del facilitador/a de la actividad.

-   **materials_satisfaction:** mide la satisfacci√≥n con los materiales provistos por el proveedor del curso.

-   **willing_recommend:** eval√∫a si recomendar√≠a el curso o no.

-   **area_goals_alignment:** mide en qu√© porcentaje el curso est√° alineado con los objetivos del √°rea.

-   **work_aplication:** en qu√© medida el contenido del curso se puede trasladar al trabajo.

-   **scrap_learning:** mide cu√°nto del contenido de la actividad no tiene aplicaci√≥n en el trabajo (leer m√°s en [este art√≠culo](https://chechoid.netlify.app/posts/scrap_learning/)).

```{r}
# Carga de datos
training <- read_delim("data/training_ratings.csv",
                       delim = ";")

# Explorar dataset
glimpse(training)
```

Como podemos apreciar, hay muchas dimensiones en las que nos podemos enfocar para medir la calidad de nuestros proveedores de capacitaci√≥n. Para este ejercicio vamos a **analizar a los proveedores seg√∫n qu√© tan alineados est√°n con los objetivos del √°rea**.

¬øPor qu√© vamos a analizar a los proveedores seg√∫n su alineaci√≥n con los objetivos?

![](no_hay_porque.jpg){fig-align="left" width="458"}

### Par√©ntesis: Nombres de los proveedores de capacitaci√≥n

Casi todos los datos de este dataset son inventados por m√≠, los puntajes fueron generados aleatoriamente, pero los nombres de los proveedores y de los cursos los saqu√© de los proveedores y cursos que ten√≠amos en Pilkington de la √©poca que trabaj√© ah√≠ (2010-2016).

As√≠ que para no herir susceptibilidades, ni que se malinterprete la informaci√≥n que vamos a generar, vamos a usar el paquete `noah` que lo que hace es generar nombres aleatorios para enmascarar los nombres reales, y mostrar un nombre simp√°tico en vez del real.

![](https://teebusch.github.io/noah/reference/figures/logo.png){fig-align="left" width="205"}

```{r}
# Cargar la librer√≠a
# install.packages("noah")
library(noah)

# Crear columna con nombres random
training <- training %>% 
    mutate(pseudo_supplier = pseudonymize(supplier)) 

# Guardamos el archivo nuevo
write_delim(training, "output/training_data_fake_names.csv", delim = ";")

# Veamos los nombres nuevos que tienen los proveedores con este cambio
fake_names <- unique(training$pseudo_supplier)

fake_names
```

¬øQui√©n no querr√≠a hacer un curso en `r fake_names[1]`? üòÅ

Cierro par√©ntesis.

## Calcular proveedores mejor alineados con los objetivos del √°rea

El siguiente paso es calcular el promedio de alineaci√≥n con objetivos por cada proveedor. De nuevo, podr√≠a ser por cualquier m√©trica, pero para este art√≠culo elejimos esa.

Como la idea del an√°lisis es analizar proveedores externos. Vamos a filtrar los cursos dictados internamente, y luego vamos a calcular el promedio de alineaci√≥n con objetivos para cada proveedor.

```{r}
# Crear un dataset de proveedores externos
external_vendors <- training %>% 
  filter(supplier != "INTERNO") # Elimina las filas de cursos internos

# Calculamos el puntaje promedio de alineaci√≥n para cada proveedor
vendor_alignment_score <-  external_vendors %>% 
  group_by(pseudo_supplier) %>% 
  summarise(puntaje_promedio = mean(area_goals_alignment)) %>%
  arrange(desc(puntaje_promedio))

# Veamos el ranking
vendor_alignment_score
```

De esta manera podemos ver que *`r pull(vendor_alignment_score[1,1])`* es el mejor proveedor con un puntaje de `r scales::percent(pull(vendor_alignment_score[1,2]),accuracy = 0.1)` y que el peor proveedor es *`r pull(vendor_alignment_score[nrow(vendor_alignment_score),1])`*.

Con estos datos podemos hacer un gr√°fico de la misma manera que lo hicimos con el gr√°fico de vinos.

```{r}
ggplot(vendor_alignment_score, aes(x = puntaje_promedio, 
                              y = reorder(pseudo_supplier, puntaje_promedio))) + # Ordenamos los vendors por puntaje_promedio
  geom_col(fill = "#103F79") +
  theme_minimal()  + # Modificamos el estilo del gr√°fico
  # A√±adimos el t√≠tulo al gr√°fico y a los ejes
  labs(title = "Ranking de proveedores de capacitaci√≥n",
       subtitle = "Ordenados por Alineaci√≥n con Objetivos del √Årea",
       x = "Puntaje Promedio",
       y = "Vendor",
       caption = "Datos generados aleatoriamente") +
  theme(title = element_text(color = "#103F79"),
        plot.title.position = "plot") +
  # A√±adimos el puntaje a cada barra
  geom_text(aes(label = scales::percent(puntaje_promedio,
                                        accuracy = 0.1)),
            size = 2.5,
            color = "white",
            hjust = 1.2) +
  scale_x_continuous(labels = scales::percent_format(accuracy = 1))

# Guardamos el gr√°fico en un archivo png
ggsave("output/ranking_proveedores_basico.png", dpi = 300, create.dir = TRUE)
```

Incluso podemos ir un paso m√°s all√° y agregar una l√≠nea que nos indique el target de alineaci√≥n m√≠nimo. De esta manera podremos saber qu√© proveedores debemos mantener s√≠ o s√≠ independiemente del costo, y cu√°les son los vendors que tenemos que reemplazar.

```{r}
ggplot(vendor_alignment_score, aes(x = puntaje_promedio, 
                              y = reorder(pseudo_supplier, puntaje_promedio))) + # Ordenamos los vendors por puntaje_promedio
  geom_col(fill = "#103F79") +
  theme_minimal()  + # Modificamos el estilo del gr√°fico
  # A√±adimos el t√≠tulo al gr√°fico y a los ejes
  labs(title = "Ranking de proveedores de capacitaci√≥n",
       subtitle = "Ordenados por Alineaci√≥n con Objetivos del √Årea",
       x = "Puntaje Promedio",
       y = "Vendor",
       caption = "Datos generados aleatoriamente") +
  theme(title = element_text(color = "#103F79"),
        plot.title.position = "plot") +
  # A√±adimos el puntaje a cada barra
  geom_text(aes(label = scales::percent(puntaje_promedio,
                                        accuracy = 0.1)),
            size = 2.5,
            color = "white",
            hjust = 1.2) +
  scale_x_continuous(labels = scales::percent_format(accuracy = 1)) +
  # Definimos un umbral de 60% con una l√≠nea punteada amarilla
  geom_vline(xintercept = 0.6,
             color = "#F3B229",
             linetype = 2,
             linewidth = 1)

# Guardamos el gr√°fico en un archivo png
ggsave("output/ranking_proveedores.png", dpi = 300, create.dir = TRUE)
```

Incluso podr√≠amos asignar colores distintos a los proveedores cuyo puntaje sea inferior al 40% para indicar de esa manera qu√© proveedores deber√≠an ser reemplazados.

```{r}
# Guardemos el gr√°fico en un objeto para simplificar la lectura
p <- ggplot(vendor_alignment_score, aes(x = puntaje_promedio, 
                              y = reorder(pseudo_supplier, puntaje_promedio))) + 
  # Definimos los cortes en funci√≥n del puntaje promedio
  geom_col(aes(fill = cut(puntaje_promedio,
                           c(-Inf,0.4, Inf)))) 
# Los valores van de menos infinito, a 0.4, y luego hasta el infinito

# Veamos este paso
p

# Ahora asignemos el color en funci√≥n de los valores de puntaje_promedio
# Si el valor es mayor a 0.4 (40%) entonces el color es azul.
# Si el valor es menor a 0.4, entonces el color de la barra ser√° naranja.
p <- p +
  scale_fill_manual(values = c("(-Inf,0.4]" = "#F7B234",
                               "(0.4, Inf]" = "#103F79"),
                    labels = c("Reemplazar", "Mantener")
                    )
# Veamos como queda hasta ahora
p

# Gr√°fico final con todos los lujos
p +
  # A√±adimos el t√≠tulo al gr√°fico y a los ejes
  labs(title = "Ranking de proveedores de capacitaci√≥n",
       subtitle = "Ordenados por Alineaci√≥n con Objetivos del √Årea",
       x = "Puntaje Promedio",
       y = "Vendor",
       caption = "Datos generados aleatoriamente",
       fill = "Acci√≥n") +
  # A√±adimos el puntaje a cada barra
  geom_text(aes(label = scales::percent(puntaje_promedio,
                                        accuracy = 0.1)),
            size = 2.5,
            color = "white",
            hjust = 1.2) +
  scale_x_continuous(labels = scales::percent_format(accuracy = 1)) +
  # Definimos un umbral de 60% con una l√≠nea punteada amarilla
  geom_vline(xintercept = 0.6,
             color = "#F3B229",
             linetype = 2,
             linewidth = 1) +
  theme_minimal() +  # Modificamos el estilo del gr√°fico
  guides(fill = guide_legend(reverse=TRUE)) +
  theme(title = element_text(color = "#103F79"),
        plot.title.position = "plot",
        legend.position = "top") 


ggsave("output/ranking_proveedores_final.png")
  
```

# Conclusi√≥n

En este ejercicio podemos ver como un an√°lisis aplicado a realizar un ranking de mejores lugares para encontrar vinos nos sirve como *inspiraci√≥n* para realizar un ranking de los mejores proveedores de capacitaci√≥n.

Hacer este tipo de ejercicios me parece muy importante por dos motivos:

-   No siempre vamos a encontrar precisamente lo que necesitamos.
-   A veces haciendo cosas *divertidas* podemos aprender a usar una herramienta (ll√°mese, R, Excel, Power BI o Python) y luego aplicar lo que aprendemos a lo que necesitamos.

Estoy seguro que si googleamos *"c√≥mo hacer un ranking de capacitaci√≥n en (inserte su herramienta aqu√≠)"*, probablemente no encontremos mucha informaci√≥n, en cambio si buscamos c√≥mo hacer un ranking en "x" tecnolog√≠a, hallaremos muchos recursos para aprender como hacerlo.

Por siempre en cada proyecto de datos, **lo m√°s importante es saber qu√© queremos lograr**, qu√© es lo que estamos buscando, cu√°l es el problema que tenemos que resolver, para qu√©, etc., etc., etc.. La parte t√©cnica se resuelve f√°cil cuando sabemos cu√°l es nuestro objetivo.

Espero que les haya gustado este ejercicio. Pr√≥ximamente subir√© el c√≥digo para hacerlo en Python, as√≠ que stay tuned!

![](https://media2.giphy.com/media/v1.Y2lkPTc5MGI3NjExNTB3YnRidWxybXp5bTB6ZDdwNnY5amZhMm90eXJqOG5uejVsNW5xNyZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/3ohjUSrMV1hm4BmG9a/giphy.gif)
