{
  "hash": "a3c78fba96f3ffac2e07726e494c233e",
  "result": {
    "markdown": "---\ntitle: \"Haciendo boludeces en R\"\nauthor: \"Checho\"\ncategories: [fun, ggplot2]\n---\n\n\n# ¬øPor qu√© eleg√≠ esto como mi primer post?\n\nUna vez vi una charla de Ryan Timpe, un Data Scientist de Lego, que en una [charla en la RStudio Conference](https://www.rstudio.com/resources/rstudioconf-2020/learning-r-with-humorous-side-projects/) contaba c√≥mo a veces hac√≠a proyectos que fueran divertidos para aprender nuevos skills de an√°lisis de datos. En su charla cuenta por ejemplo, que hizo un an√°lisis de los di√°logos de la serie *The Golden Girls* usando t√©cnicas de text mining para detectar cu√°les eran las palabras m√°s frecuentes, entonces cada vez que una protagonista dec√≠a esa palabra ellos hac√≠an un fondo blanco de lo que estuvieran tomando.\n\nEste post va de lo mismo. Yo quer√≠a aprender a usar im√°genes en mis visualizaciones, as√≠ naci√≥ este proyecto en el que us√© im√°genes de personas con rasgos \"similares\" a los m√≠os e incluir las fotos en un gr√°fico de dispersi√≥n.\n\nEsto que es una boludez implic√≥:\n\n-   Crear un formulario en Google Forms\n\n-   Levantar los datos de las respuestas\n\n-   Procesar los resultados\n\n-   E incluir visualizaciones usando las im√°genes de las personas.\n\nEste tipo de proyectos lo que permite es que el esfuerzo que dedic√°s a aprender no se sienta pesado, y que te da una motivaci√≥n extra para buscar la soluci√≥n para lograr el resultado.\n\n# Un poco de contexto\n\nEste soy yo:\n\n![En mi luna de miel en Mendoza](archivos/sergio.jpg){fig-alt=\"Foto de Sergio, sosteniendo una copa de vino\" width=\"372\"}\n\nComo ver√°n, tengo el pelo m√°s o menos largo, con flequillo y barba candado. Mucha gente dice que me parezco a Nicol√°s del Ca√±o ü§∑, un diputado del Partido de los Trabajadores Socialistas de Argentina y que tiene un corte de pelo parecido al m√≠o y tambi√©n usa barba.\n\n![Nicol√°s del Ca√±o](https://www.izquierdadiario.es/IMG/auton3.jpg?1605455691){width=\"221\"}\n\nEn estas fotos no nos vemos tan parecidos, pero d√©jenme contarles una an√©cdota. Cuando mi hija ten√≠a 3 a√±os aproximadamente est√°bamos en campa√±a electoral de diputados y hab√≠a afiches de todos los partidos pol√≠ticos pegados por todos lados, incluyendo claro est√° los del PTS y Nicol√°s del Ca√±o obviamente.\n\nEn esa √©poca mi hija y mi esposa iban caminando por la calle, y cuando se estaban acercando a uno de los afiches de Del Ca√±o mi hija apunta con su dedito y dice \"Pap√°!\" como si yo fuera el que estaba en el afiche. As√≠ que alg√∫n parecido hay.\n\nTambi√©n dijo lo mismo mirando un afiche de Johnny Depp promocionando el perfume Savage, pero esa no me la cree nadie.\n\nOtros personajes con los que mis amigos suelen bromear que somos parecidos son el Gigol√≥, Roberto Baradel, o el Mono Burgos.\n\n![El Gigol√≥](https://www.cronica.com.ar/export/sites/cronica/img/2019/05/06/gigolo_2.jpg_343233968.jpg){width=\"184\"}\n\n![Roberto Baradel](https://cdn.cnn.com/cnnnext/dam/assets/190306231108-pba-baradel-large-169.jpg){width=\"339\"}\n\n![El Mono Burgos](https://upload.wikimedia.org/wikipedia/commons/b/b7/Germ%25C3%25A1n_Burgos_-_01.jpg){width=\"213\"}\n\nYa s√© lo que est√°n pensando: *Con amigos as√≠ qui√©n necesita enemigos*. Pero igual se hacen querer.\n\n## G√©nesis de la idea: k-nn\n\nLa idea de este an√°lisis surgi√≥ un d√≠a despu√©s de hacer una explicaci√≥n sobre un m√©todo de clustering llamado **k-nn**. Los m√©todos de clustering son t√©cnicas de ciencia de datos que permiten hallar grupos entre los datos (llamados *clusters* en la jerga).\n\nEl m√©todo k-nn, *k* *nearest neighbors* o de vecinos m√°s cercanos lo que hace es asignar a cada individuo a un cluster en funci√≥n de las caracter√≠sticas de sus \"vecinos\". Es decir que determina a qu√© grupo pertenece cada caso en funci√≥n a qu√© casos se parece m√°s.\n\nLa forma que se me ocurri√≥ para explicar esto de manera visual fue con este dibujo que hice en Paint:\n\n![](archivos/clones_paint.jpg)\n\nLa explicaci√≥n es que yo, dentro de ese conjunto de datos, estoy m√°s cerca de pertenecer al cluster del Mono Burgos y de Nicol√°s del Ca√±o, m√°s que del cluster de Keanu Reeves, Jeff Bridges y Brad Pitt.\n\nY despu√©s tuve una idea. **¬øY si hago esto con datos?**\n\n![](https://media1.giphy.com/media/3oz8xP6SaSkSU9dhcI/200w.gif?cid=82a1493b6dys6v5sl1wm0y65sc1ej72nglv6y40cwx6rrtw2&rid=200w.gif&ct=g)\n\n# Haciendo cosas raras para gente normal en R\n\nLa idea entonces es replicar el gr√°fico de arriba pero usando datos. Entonces lo que hice fue en primer lugar buscar fotos de personajes argentinos e internacionales que tengan el pelo m√°s o menos largo, usen barba, y en algunos casos tengan unos kilos de m√°s.\n\nPara este paso lo que hice fue pasar todas las fotos de los personas en Canva para que me queden todas las im√°genes del mismo tama√±o.\n\nLuego me arm√© un formulario en Google Forms con cada imagen para compartir con amigas y amigos para que voten del 1 al 10 la *facha* (facha en Argentina es una forma de decir belleza) y la *copadez* (que tan agradables son las personas).\n\nLos personajes involucrados fueron:\n\n-   Nicol√°s del Ca√±o\n\n-   Roberto Baradel\n\n-   El Mono Burgos\n\n-   Ricardo Caruso Lombardi\n\n-   Ben Affleck\n\n-   Jeff Bridges\n\n-   Brad Pitt\n\n-   Javier Bardem\n\n-   Keanu Reeves\n\n-   Y su fiel servidor üòâ\n\nEn mi an√°lisis original cargu√© los datos directamente desde el Google Sheets que se genera con los resultados del Forms. Solo para los fines de reproducibilidad en este caso voy a usar un archivo csv as√≠ si quieren pueden replicar los resultados.\n\nAs√≠ que ahora podemos armar el script.\n\n## Cargando los datos y prepar√°ndolos\n\nEmpecemos cargando las librer√≠as y los datos directamente desde un repositorio:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Paquetes\nlibrary(tidyverse) # Cargar, limpiar y preparar datos\nlibrary(ggimage)   # Para usar im√°genes en las visualizaciones\n\n# Datos\nclones <- read_delim(\"https://raw.githubusercontent.com/chechoid/silliest-use-of-r/main/source.csv\", delim = \";\")\n\n\ncomentarios <- clones %>% \n  select(comentarios = `Pon√© lo que quieras... parecidos, chistes, comentarios, etc...`) %>% \n  filter(!is.na(comentarios))\n\n# Exploremos los datos\nhead(clones)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 √ó 24\n  `Marca temporal`    Facha de‚Ä¶¬π Copad‚Ä¶¬≤ Facha‚Ä¶¬≥ Copad‚Ä¶‚Å¥ Facha‚Ä¶‚Åµ Copad‚Ä¶‚Å∂ Facha‚Ä¶‚Å∑\n  <dttm>                   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n1 2021-06-23 12:37:28         10      10       7      10       1       1       1\n2 2021-06-23 12:39:12          4      10       5       9       1       1       1\n3 2021-06-23 12:42:21          8       9       8       9       5       4       3\n4 2021-06-23 12:43:24         10      10       1       1       1       1       1\n5 2021-06-23 12:45:03         10       8       4       9       6       9       1\n6 2021-06-23 12:45:12          5       9       1       8      10       8       1\n# ‚Ä¶ with 16 more variables: `Copadez de Roberto` <dbl>, `Facha de Jeff` <dbl>,\n#   `Copadez de Jeff` <dbl>, `Facha de Brad` <dbl>, `Copadez de Brad` <dbl>,\n#   `Facha del Mono` <dbl>, `Copadez del Mono` <dbl>, `Facha de Sergio` <dbl>,\n#   `Copadez de Sergio` <dbl>, `Facha de Ricky` <dbl>,\n#   `Copadez de Ricky` <dbl>, `Facha de Ben` <dbl>, `Copadez de Ben` <dbl>,\n#   `Facha de Javier` <dbl>, `Copadez de Javier` <dbl>,\n#   `Pon√© lo que quieras... parecidos, chistes, comentarios, etc...` <chr>, ‚Ä¶\n# ‚Ñπ Use `colnames()` to see all variable names\n```\n:::\n:::\n\n\nAh√≠ podemos ver que para cada personaje tenemos una columna con el puntaje de su facha y su puntaje de copadez.\n\nEl siguiente paso consiste en eliminar algunas columnas que no son relevantes para el an√°lisis, y agregamos una columna de `id`. Y luego tenemos que \"pivotear\" la tabla para que nos queden todas las columnas de puntajes de los personajes en dos columnas:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Eliminar columnas innecesarias\nclones <- clones %>% \n  select(-`Marca temporal`, -`Pon√© lo que quieras... parecidos, chistes, comentarios, etc...`)\n\n# Agregar columna de id\nclones <- clones %>% \n  rowid_to_column(var = \"id\")\n\n# Pivotear variables\nclones <- clones %>% \n  pivot_longer(cols = c(\"Facha de Keanu\": \"Copadez de Javier\"),\n               names_to = \"personaje\",\n               values_to = \"puntaje\")\n\n# Veamos como queda el dataset ahora\nhead(clones)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 √ó 3\n     id personaje          puntaje\n  <int> <chr>                <dbl>\n1     1 Facha de Keanu          10\n2     1 Copadez de Keanu        10\n3     1 Facha de Russell         7\n4     1 Copadez de Russell      10\n5     1 Facha de Nico            1\n6     1 Copadez de Nico          1\n```\n:::\n:::\n\n\nHab√≠amos comenzado con un dataset de 66 filas y 24 columnas. Ahora terminamos con un data frame de 1.452 filas en 3 columnas. Ahora necesitamos eliminar las palabras intermedias `de` y `del` de los nombres en la columna `personaje` as√≠ despu√©s podemos crear una columna para `facha`, y otra para `copadez`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Separar variables categ√≥ricas\nclones <- clones %>% \n  mutate(personaje = str_remove(personaje, \"de \"),\n         personaje = str_remove(personaje, \"del \"))\n\n# Veamos el puntaje promedio de cada personaje y sus caraceter√≠sticas\nclones %>% \n  group_by(personaje) %>% \n  summarise(valor_promedio = mean(puntaje)) %>% \n  ggplot(aes(x = valor_promedio, y = personaje)) +\n  geom_point(size = 2)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/preproceso2-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Dividimos la columna 'personaje' en dos columnas, una para la m√©trica y otra para el nombre\nclones <- clones %>% \n  separate(personaje,  into = c(\"metrica\", \"persona\"))\n\n\n# Pivotear ancho \nclones <- clones %>% \n  pivot_wider(id_cols = c(id, persona),\n              names_from = metrica,\n              values_from = puntaje)\n\n# Veamos como queda el data frame ahora\nhead(clones)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 √ó 4\n     id persona Facha Copadez\n  <int> <chr>   <dbl>   <dbl>\n1     1 Keanu      10      10\n2     1 Russell     7      10\n3     1 Nico        1       1\n4     1 Roberto     1       1\n5     1 Jeff        5       5\n6     1 Brad       10      10\n```\n:::\n:::\n\n\nLuego de estos pasos quedamos con un data frame de 726 filas, una para cada votaci√≥n para cada personaje, y con 4 columnas, `id`, `persona`, `Facha` y `Copadez`. Con estos datos podemos ver los resultados de cada persona:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculamos los resultados promedios para cada persona y graficamos los resultados\nresultados <- clones %>% \n  group_by(persona) %>% \n  summarise(facha_promedio = mean(Facha),\n            copadez_promedio = mean(Copadez))\n\nggplot(resultados, aes(x = copadez_promedio, y = facha_promedio, color = persona)) +\n  geom_point(size = 3)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/resultados_promedios-1.png){width=672}\n:::\n:::\n\n\nEn esencia, este es el gr√°fico al que queremos llegar. As√≠ como est√° es medio aburrido, as√≠ que vamos a enchular este gr√°fico con im√°genes.\n\n## Trabajando con las im√°genes\n\nComo contaba antes, primero arm√© una presentaci√≥n en Canva y pegu√© todas las im√°genes de cada personaje para que queden m√°s o menos del mismo tama√±o. Luego guard√© cada imagen en un archivo separado, y en este caso las guard√© en una carpeta que se llama `clones`.\n\nPodr√≠a haber hecho la carga de las fotos una por una, pero quer√≠a hacer este trabajo lo m√°s eficiente posible tratando de repetir pasos. Para eso tenemos que crear un data frame que tenga por un lado el nombre de la persona **tal cual** lo tenemos en la tabla de las votaciones, y que incluya la direcci√≥n a la imagen.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Creamos un vector con los nombres de las personas\npersona <- resultados %>% \n  select(persona) %>% \n  pull()\n\n# Creo un vector de im√°genes\nruta <- \"pics\"        # Ruta de las fotos\nextension <- \"png\"   # Extensi√≥n de los archivos de im√°genes\n\n# nombres de los archivos\nimagen <- c(\"Ben\", \"Brad\", \"Javier\", \"jeff\", \"keanu\", \"mono\", \"nico\", \n            \"ricky\", \"roberto\", \"russell\", \"sergio\")\n\n# Creo el vector de fotos con direcci√≥n y extensi√≥n completa\nfoto <- str_c(ruta, imagen, sep = \"/\")\nfoto <- str_c(foto, extension, sep = \".\")\n\n# Creo el dataframe y lo agrego al dataframe resultados\npics <- data.frame(persona, foto)\n\n# Ver el resultado de este proceso\npics\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   persona             foto\n1      Ben     pics/Ben.png\n2     Brad    pics/Brad.png\n3   Javier  pics/Javier.png\n4     Jeff    pics/jeff.png\n5    Keanu   pics/keanu.png\n6     Mono    pics/mono.png\n7     Nico    pics/nico.png\n8    Ricky   pics/ricky.png\n9  Roberto pics/roberto.png\n10 Russell pics/russell.png\n11  Sergio  pics/sergio.png\n```\n:::\n:::\n\n\nAhora tenemos un data frame de 11 filas y dos columnas, con el nombre de cada persona, y la direcci√≥n al archivo que contiene las im√°genes de cada una. Estos datos lo podemos integrar al data frame que ven√≠amos trabajando con los resultados de Facha y Copadez promedio de cada personaje.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Unimos los datasets\nresultados <- left_join(resultados, pics)\n\nhead(resultados)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 √ó 4\n  persona facha_promedio copadez_promedio foto           \n  <chr>            <dbl>            <dbl> <chr>          \n1 Ben               8.23             6.47 pics/Ben.png   \n2 Brad              8.52             7.55 pics/Brad.png  \n3 Javier            6.89             6.56 pics/Javier.png\n4 Jeff              5.06             6.45 pics/jeff.png  \n5 Keanu             7.77             8.74 pics/keanu.png \n6 Mono              3.30             6.30 pics/mono.png  \n```\n:::\n:::\n\n\n## Poniendo im√°genes al gr√°fico\n\nY ahora si, a lo que venimos: incluir las fotos en el gr√°fico\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# El gr√°fico final\nggplot(resultados, aes(x = copadez_promedio, y = facha_promedio)) +\n  geom_image(aes(image=foto), size = 0.08) +\n  theme_minimal() +\n  scale_x_continuous(limits = c(1,10)) +\n  scale_y_continuous(limits = c(1,10)) +\n  labs(title = \"Facha y Copadez Promedio de cada Personaje\",\n       x = \"Copadez Promedio\", \n       y = \"Facha Promedio\",\n       caption = \"n = 66\\nNinguna t√≠a particip√≥ del relevamiento\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/grafico_final-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}